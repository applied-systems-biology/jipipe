<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JIPipe on JIPipe for ImageJ</title>
    <link>https://www.jipipe.org/</link>
    <description>Recent content in JIPipe on JIPipe for ImageJ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://www.jipipe.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Version 1.77.x</title>
      <link>https://www.jipipe.org/download/changelog/1.77.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.77.x/</guid>
      <description> Table Of Contents 1.77.0 1.77.0 new Archive functionality for projects (Project &amp;gt; Archive project ...) that collects all files and generates a directory or ZIP containing the project and all its data new Node &amp;ldquo;Replace label values by table&amp;rdquo; (mapping labels) new Node &amp;ldquo;Table column to image&amp;rdquo; (convert a table column into a 1px wide image with height = number of rows; allows to apply image operations on table columns) new Node &amp;ldquo;Image to table column&amp;rdquo; (put image back into a table column) new Image viewer measurement tool now measures physical sizes fixed Crash on starting JIPipe with a fresh Fiji installation fixed Previews of RGB images were changing the image fixed Freeze caused by updating certain parameters improved Rename &amp;ldquo;Integrate table columns&amp;rdquo; to &amp;ldquo;Summarize table&amp;rdquo; improved Performance of previews improved Expression-based hyperstack slicer now has custom variables improved &amp;ldquo;Set annotations&amp;rdquo; now has access to the number of rows in the data table </description>
    </item>
    
    <item>
      <title>Version 1.78.x (current version)</title>
      <link>https://www.jipipe.org/download/changelog/1.78.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.78.x/</guid>
      <description>1.78.0 You can find the changelog on image.sc</description>
    </item>
    
    <item>
      <title>Version 1.76.x</title>
      <link>https://www.jipipe.org/download/changelog/1.76.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.76.x/</guid>
      <description> Table Of Contents 1.76.0 1.76.0 improved Layout manager: do not move nodes (by default) improved &amp;ldquo;Add table columns&amp;rdquo; now supports annotations and custom variables improved &amp;ldquo;Add table columns&amp;rdquo; now allows to ensure a minimum number of rows improved &amp;ldquo;Split ROI into individual ROI lists&amp;rdquo;: support for custom annotation value new Cache manager: saving/loading all cached data from directory/zip new Node &amp;ldquo;Draw scale bar ROI&amp;rdquo; new Node &amp;ldquo;Combine ROI lists&amp;rdquo; (like Merge ROI lists but with strict ordering) new Node &amp;ldquo;Pull annotations from data tables&amp;rdquo; new Node &amp;ldquo;Annotate with data table properties&amp;rdquo; new Node &amp;ldquo;Push annotations into data tables&amp;rdquo; improved UX of the cache manager button in the menu bar improved &amp;ldquo;Reduce &amp;amp; split stacks (slice)&amp;rdquo; now supports annotations improved UX of the task/process manager button in the menu bar (now can cancel enqueued tasks) fixed Draw ROI nodes not applying ROI properties improved Cache cleanup performance improved Image viewer: minima and maxima for calibration are now sourced from all slices fixed Comment nodes: crash if icon is null improved Organization of annotation nodes (now in sub-menus that indicate the type of addressed data) improved UX of &amp;ldquo;Add slots&amp;rdquo;/&amp;ldquo;Edit slots&amp;rdquo; </description>
    </item>
    
    <item>
      <title>Version 1.75.x</title>
      <link>https://www.jipipe.org/download/changelog/1.75.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.75.x/</guid>
      <description> Table Of Contents 1.75.2 1.75.1 1.75.2 fixed Convolution nodes now behave exactly as the convolution operations from ImageJ improved Expressions are now marked more clearly in the parameter UI 1.75.1 fixed Critical bug where enum parameters could not be initialized </description>
    </item>
    
    <item>
      <title>Version 1.75.0 </title>
      <link>https://www.jipipe.org/download/changelog/1.75.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.75.0/</guid>
      <description>Table Of Contents 1.75.1 Image processing Data processing Expressions User interface Bugfixes and small improvements Known issues 1.75.1 fixed Critical bug where enum parameters could not be initialized Image processing Various nodes that generate statistics on labels
new Node &amp;ldquo;Merge 2D slices into hyperstack&amp;rdquo; (inverse operation of &amp;ldquo;Split into 2D slices&amp;rdquo;). Intended for more advanced filtering of hyperstack slices. new Node &amp;ldquo;Merge small labels&amp;rdquo; (merges labels with a low number of pixels into a neighboring label index) new Node &amp;ldquo;Key/Value Histogram 5D&amp;rdquo; new Node &amp;ldquo;Key/Value threshold statistics 5D&amp;rdquo; new Node &amp;ldquo;Key/Value statistics 5D (fast averages)&amp;rdquo; new Node &amp;ldquo;Key/Value threshold statistics 5D (fast averages)&amp;rdquo; improved Convolve operators now have normalization parameter improved Convolve operators now support RGB images (same behavior as ImageJ) Data processing new Node &amp;ldquo;Filter by annotation&amp;rdquo; (more compact version of &amp;ldquo;Split &amp;amp; filter by annotation&amp;rdquo; that applies the same operation) Expressions new New function STRING_FORMAT (C-style string formatting) new New function NUM (Alternative to TO_NUMBER) improved Expressions that return numbers: valid numeric strings are automatically converted to numbers (before there was an exception if not a Number type is returned) fixed Escaping of expressions did not work as expected (errors if sub-strings contained spaces) User interface improved New &amp;ldquo;Memory&amp;rdquo; menu in the status bar that contains all memory-related operations (before was only a gear icon) improved &amp;ldquo;Reduce memory&amp;rdquo; moved into the &amp;ldquo;Memory&amp;rdquo; menu fixed Number editor behaved erratically in non-english locales (now uses the advanced number parser capable of parsing NA and infinity) Bugfixes and small improvements Please refer to the commits in the JIPipe GitHub repository to find a list of all bugfixes and improvements.</description>
    </item>
    
    <item>
      <title>Version 1.74.0</title>
      <link>https://www.jipipe.org/download/changelog/1.74.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.74.0/</guid>
      <description>Table Of Contents Plugin manager Environment EasyInstaller TrackMate integration (Beta) Cellpose integration Omnipose integration (Beta) Image processing ROI processing Coloc2 integration Table processing Plotting General data processing Parameters Expressions Node examples User interface Project management Parameters Graph editor Compartment editor Cache browser / Results viewer ImageJ alias menu Image viewer ROI manager Measurement tool / mask drawer / ROI drawer Plot editor Table editor Dependency management Node templates Data management Data API Bugfixes and small improvements Known issues Plugin manager In older JIPipe versions, all extensions are automatically loaded during the JIPipe startup.</description>
    </item>
    
    <item>
      <title>Version 1.73.0</title>
      <link>https://www.jipipe.org/download/changelog/1.73.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.73.0/</guid>
      <description>Table Of Contents Trainable Weka Segmentation nodes Example Skeletons Example ROIs and labels Trainable Weka Segmentation nodes JIPipe nodes and data types encapsulating the Trainable Weka Segmentation were added, making it possible to utilize these without the Macro node.
new Data type “Weka model” (saves classifier, data, and metadata of the segmenter) new Node “Import Weka model” (allows to import existing models) new Node “Train Weka model from ROI (2D)” new Node “Train Weka model from ROI (3D)” new Node “Train Weka model from mask (2D)” new Node “Train Weka model from labels (2D)” new Node “Weka classifier 2D” new Node “Weka classifier 3D” Example Using the Weka segmentation nodes small size weka simple tutorial A small example showcasing how to utilize the Trainable Weka Segmentation nodes.</description>
    </item>
    
    <item>
      <title>Version 1.72.x</title>
      <link>https://www.jipipe.org/download/changelog/1.72.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/download/changelog/1.72.x/</guid>
      <description>Version 1.72.0 This is the first public release of JIPipe Version 1.72.x Mostly changes to make JIPipe compatible to SciJava Maven and cleanup new Node “Reduce &amp;amp; split hyperstack” (allows the slicing of Hyperstacks by indices; a more simple alternative to “Reduce &amp;amp; split hyperstack (Expression)”) new Node “Draw/modify ROIs” (interactive editing of ROI; it works but is currently incomplete and subject to change) </description>
    </item>
    
    <item>
      <title>About loops</title>
      <link>https://www.jipipe.org/tutorials/advanced/loops/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/loops/step1/</guid>
      <description>JIPipe processes data so that each node completes all its tasks on all incoming data before the next step is executed. For large data sets, this can cause issues with RAM capacity.
To resolve this, JIPipe comes with loop control nodes that allow to setup a workflow where a set of nodes is repeatedly executed on a single input. Loops are a syntactic sugar around group nodes that also have loop capabilities, but lack cache support for the internal nodes.</description>
    </item>
    
    <item>
      <title>About Python nodes</title>
      <link>https://www.jipipe.org/tutorials/advanced/python/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/python/step1/</guid>
      <description>Load the example pipeline. When additional processing is necessary, e.g., with the results table, Python code can also be applied.
As an example, add the Python script (iterating) node (red arrow 1) to the pipeline and connect it to the Find particles node. The Script field (red rectangle 2) will, e.g., print the table into the Log window of JIPipe (red arrow 3), and puts the table into the node’s output slot (red arrow 4).</description>
    </item>
    
    <item>
      <title>General questions</title>
      <link>https://www.jipipe.org/faq/general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/faq/general/</guid>
      <description>Where do I find documentation? You can find all documentation pages in the Help menu at the top right.
There are also context-based documentations available if you select a node in the graph. Hover your mouse over a parameter to show documentations for this parameter only.
Does JIPipe have a backup function? Yes. By default, JIPipe creates a backup every 3 minutes. You can recover it via Project &amp;gt; Restore Backup.</description>
    </item>
    
    <item>
      <title>Header</title>
      <link>https://www.jipipe.org/_header/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/_header/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/introduction/</guid>
      <description>JIPipe comes with various features that help lecturers to setup exercises where students can have hands-on experience and first achievements in creating image analysis workflows.
The following features will be explained:
Graph compartments as means to structure the analysis into units with a clear purpose The project overview tab that allows to provide the list of tasks and explanations directly within the project file Comment nodes to annotate specific areas or nodes within a pipeline Node templates and its associated menu can be utilized to provide students with a selection of nodes to be used in a project A project permission system to prevent students from applying accidental modifications </description>
    </item>
    
    <item>
      <title>Loading: Step 1</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/step1/</guid>
      <description> If you downloaded a *.zip file, please extract it first Open JIPipe Navigate to Project &amp;gt; Open </description>
    </item>
    
    <item>
      <title>Setup Cellpose integration</title>
      <link>https://www.jipipe.org/installation/third-party/cellpose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/installation/third-party/cellpose/</guid>
      <description>Explains the setup of JIPipe&amp;rsquo;s Cellpose integration</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/examples/how-to-browse-results/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-browse-results/step1/</guid>
      <description> If you downloaded a *.zip file, please extract it first Open JIPipe Navigate to Project &amp;gt; Open analysis output </description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/advanced/imagej-macros/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/imagej-macros/step1/</guid>
      <description>👉 This tutorial requires that you have installed node template Import images.
If you do not have the template, you can download it via Manage &amp;gt; Download more templates or by importing the Templates.json file that is provided in the data package. If you do not know how to download or import node templates, please check out our tutorial.
Create a new project with one compartment.
Drag the data folder of the tutorial to the UI.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step1/</guid>
      <description>From the main GUI. Type a keyword into the search bar (red arrow 1), e.g., looking for way to add a file to the pipeline at the beginning. Then choose the desired node, in this case we go for adding a file (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/annotating-data-with-measurements/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotating-data-with-measurements/step1/</guid>
      <description>Open the example tutorial project.
Add the Merge table columns (simple) node (red arrow 1) and connect it to the two nodes above (red arrow 2, 3).
Run the node and in its cache browser (red arrow 4) open the cache entry (red arrow 5) in a viewer (red arrow 6).
Scroll to the end of the table and observe that the AVG Density column now appears in the table (red arrow 7)</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step1/</guid>
      <description>Load the project file of this tutorial into JIPipe.
Select the Import image node (red arrow 1), we will use the image properties provided by this node to annotate the data. Use the Annotations tab (red arrow 2) to seek the necessary node in the Annotations &amp;gt; Generate menu (red arrow 3).
Add the node Annotate with image properties (red arrow 4).
The node Annotate with image properties can create JIPipe-managed annotations from properties (width, height, physical sizes, &amp;hellip;) of an image.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-2/step1/</guid>
      <description>Load the pipeline of the tutorial, select the Split &amp;amp; filter by annotations node (red arrow 1) and observe the ➕ (Add slot) button (red arrow 2) and the Slots tab in the right (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step1/</guid>
      <description>In this tutorial we will work with a generated image, which is a quick and convenient way to test various features.
Begin by adding the node Add data &amp;gt; Image &amp;gt; Generate from math expression
Generate from math expression generates an image with a user-defined size and generates the value via a custom math expression.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step1/</guid>
      <description>Load the example pipeline.
Go to the Compartments tab and update the cache directly from there. This can be achieved with the compartment nodes the same way as with regular nodes. Use the green arrow on the Processing compartment (red arrow 1) and choose the Cache intermediate results option to save the cache for all nodes (red arrow 2).
Note that the method of updating the cache from the compartments works only if the output node of the compartment is connected!</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step1/</guid>
      <description>We assume that you have followed the previous tutorial
Load the example pipeline.
Go to the Compartments tab and update the cache directly from there. This can be achieved with the compartment nodes the same way as with regular nodes. Use the green arrow on the Processing compartment (red arrow 1) and choose the Cache intermediate results option to save the cache for all nodes (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/comment-nodes/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/comment-nodes/step1/</guid>
      <description>Open the project file and run the bottom node Import image (red arrow 1). Chose the Cache intermediate results option to see the outcome from all nodes. Observe the cache (red arrow 2) and notice that the image has multiple channels (red arrow 3). In order to split the channels, search for a suitable node (red arrow 4) with the keyword split (red arrow 5). Choose the Split channels node (red arrow 6) and add it to the pipeline (red arrow 7).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step1/</guid>
      <description>Load the example pipeline. The output of the workflow is the three channels of the FluorescentCells image, and the single channel of the blobs image.
Before we start processing these images, we shall separate the processing nodes from the preprocessing nodes. The latter includes the steps that we have entered until now: folder structure, annotations, image import, image filtering based on annotations, and channel splitting (if necessary). It is easier to organize the pipeline if we now start a new work place as introduced earlier when we discussed compartments.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step1/</guid>
      <description>Please ensure that you have followed the tutorial Compartments I: Creating and connecting
Navigate to the Processing compartment.
We start with segmenting the blob image. We can use the node search triangle (red arrow 1) to find matching nodes (red arrow 2). Search for gaussian blur (red arrow 3) and select the Gaussian blur 2D node (red arrow 4).
Add the node to the pipeline (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-1/step1/</guid>
      <description>Open the example project Tutorial_B22-1_Part1.jip and navigate to the Export compartment (red arrow 1).
Update the cache using the output node’s Cache intermediate results option (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step1/</guid>
      <description>Open the example project and navigate to the Export compartment (red arrow 1).
Update the cache using the output node’s Cache intermediate results option (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step1/</guid>
      <description>Click on the node to activate it &amp;hellip;</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step1/</guid>
      <description>Search for nodes by name. Use the search bar for this purpose. To import the image file as ImageJ image, search for a node called Import image.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step1/</guid>
      <description>To add a new node by drag and drop, none of the nodes must be selected; this can be achieved by clicking on the white are of the GUI (red arrow 1). The right side now shows the Available nodes tab (red arrow 2), where one can scroll down to find a node, or use the search bar (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step1/</guid>
      <description>Create a new JIPipe project (red arrow 1) using a template (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step1/</guid>
      <description>Open the example pipeline, go to the Compartments tab (red arrow 1) and run the Process compartment (red arrow 2). Use the Cache intermediate results method (red arrow 3) to be able to see the cache content of all nodes in both compartments (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step1/</guid>
      <description>Create a new project file based on the one-compartment template and go to the Analysis compartment (red arrow 1). In the system file explorer, navigate to the tutorial folder after downloading it (red arrow 2) and find the data folder (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step1/</guid>
      <description>Open the project file from the tutorial Importing a directory of images I and navigate to the Analysis compartment (red arrow 1). Run the last node (red arrow 2) with the Cache intermediate results option (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step1/</guid>
      <description>Open the project file and run the bottom node Import image (red arrow 1). Chose the Cache intermediate results option to see the outcome from all nodes.
Observe the cache (red arrow 2) and notice that the image has multiple channels (red arrow 3). In order to split the channels, search for a suitable node (red arrow 4) with the keyword split (red arrow 5). Choose the Split channels node (red arrow 6) and add it to the pipeline (red arrow 7).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/node-parameters/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/node-parameters/step1/</guid>
      <description>Add a new node to the pipeline to carry out Gaussian blurring. E.g., use the search bar as described before (red arrow 1) and choose the proper node Gaussian Blur 2D (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step1/</guid>
      <description>Load the example pipeline.
In the Processing compartment, disconnect the output node from the Auto threshold 2D node (red arrow 1).
Locate the particle finder node by searching with keywords (red arrow 2, e.g., in the Find matching algorithm window. Chose the Find particles 2D node (red arrow 3) and add it to the pipeline (red arrow 4).
The Find particles 2D node is the JIPipe equivalent of the ImageJ command Analyze &amp;gt; Analyze Particles.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step1/</guid>
      <description>Create a new JIPipe project (red arrow 1) using a template (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step1/</guid>
      <description>Load a 1-compartment template into JIPipe and add the data folder of the tutorial to the UI (red arrow 1).
👉 This tutorial requires that you have installed node template Import images.
If you do not have the template, you can download it via Manage &amp;gt; Download more templates or by importing the Templates.json file that is provided in the data package. If you do not know how to download or import node templates, please check out our tutorial.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step1/</guid>
      <description>Load the example pipeline.
Add a second compartment, name it Train Cellpose (red arrow 1) and open it in a tab by double-clicking it (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step1/</guid>
      <description>Open the project file assigned to this tutorial.
On the GUI, draw around a group of nodes using the mouse with the left button down (red arrow 1), resulting in the nodes inside the dotted rectangle to be selected (first selected node: red arrow 2, last selected node: red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step1/</guid>
      <description>This guide assumes that you have followed the tutorial &amp;ldquo;Creating node groups I&amp;rdquo;
In order to see the content of the group node, double-click on the node (red arrow 1), which will open the content of the group in a new tab (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step1/</guid>
      <description>Nodes with a specific set of parameters, or nodes that are formed into a Group (see previous tutorial) can be saved as Templates, in order to make them available for easy reuse. The template nodes can be made accessible either globally (i.e., by other projects as well), or locally, where only the current project can have access to them.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step1/</guid>
      <description>Many JIPipe nodes have the ability to apply multiple parameter sets. The following steps will guide you through how this feature is used.
👉 This tutorial requires that you have installed node template Import images.
If you do not have the template, you can download it via Manage &amp;gt; Download more templates or by importing the Templates.json file that is provided in the data package. If you do not know how to download or import node templates, please check out our tutorial.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/ui/change-temp-directory/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/change-temp-directory/step1/</guid>
      <description>Navigate to the Project menu (red arrow 1), followed by the Applications settings option (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/ui/image-viewer-1/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/image-viewer-1/step1/</guid>
      <description>Open an image in a pipeline (red arrow 1), double-click on the output in the Cache (red arrow 2) and examine the pop-up Image Viewer (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/ui/node-examples/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/node-examples/step1/</guid>
      <description>Add a new node with prefilled example parameters of script is easy. Navigate to the main search bar and type in the word “example” (red arrow 1). Browse through the list and select the example that is need (red arrow 2). Please note that not all nodes are available as examples!</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/ui/project-backups/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-backups/step1/</guid>
      <description>Projects are regularly saved automatically as a backup. These can be easily recovered by going to the Project tab (red arrow 1) and choosing Restore backup (red arrow 2) The location of the backups can be decided by the user.</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step1/</guid>
      <description>In the JIPipe GUI, select Project -&amp;gt; New from template (red arrow).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step1/</guid>
      <description>In the JIPipe GUI, select Project -&amp;gt; New from template (red arrow).</description>
    </item>
    
    <item>
      <title>Step 1</title>
      <link>https://www.jipipe.org/tutorials/ui/project-open/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-open/step1/</guid>
      <description>From the Project menu, select Recent projects, and choose one of the preexisting JIPipe file (red arrow 1 and red arrow 2). If you have no recent projects, you can also navigate to Project &amp;gt; Open and select the *.jip file.</description>
    </item>
    
    <item>
      <title>Where are the node templates?</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/step1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/step1/</guid>
      <description>Begin by starting JIPipe and navigating into a compartment (by default tab Analysis).
Click an empty area to deselect all nodes.
You should see a tab Node templates that reveals a list of all existing node templates.
In the figure, we already have two templates that are stored application-wide (meaning that they are accessible from all projects). There is also the option to only store specific templates into the current project.</description>
    </item>
    
    <item>
      <title>Alterative to Step 1</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step1.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step1.5/</guid>
      <description>Alternatively, select the group node (red arrow 1), go to Parameters (red arrow 2) and select Edit graph (red arrow 3).
The new tab will contain the content of the group, similarly to the previous viewing method.</description>
    </item>
    
    <item>
      <title>Common issues</title>
      <link>https://www.jipipe.org/faq/issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/faq/issues/</guid>
      <description>JIPipe does not load. There can be multiple causes for issues:
Error Cause Solution Splash screen says &#34;Module threw error&#34;. Various ImageJ errors. A dependency might be missing. Please check if all JIPipe dependencies are installed. Please do not hesitate to contact us. Provide us a screenshot, and ideally the full set of error messages. Splash screen says &#34;Module threw error&#34;. ImageJ error says &#34;Caused by: java.lang.NoSuchMethodError: com.fasterxml.jackson.core.JsonParser.getReadCapabilities()&#34; A plugin interferes with a software library.</description>
    </item>
    
    <item>
      <title>Importing from JSON: Step 1</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/json1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/json1/</guid>
      <description>Navigate to Mange &amp;gt; Import from file and select the template JSON file (usually Templates.json).</description>
    </item>
    
    <item>
      <title>Loading: Step 2</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/step2/</guid>
      <description>Select a file that ends with *.jip Click Open *.jip files are typically located either directly in the root directory of the package, or within a subdirectory ProtocolAndData.</description>
    </item>
    
    <item>
      <title>Setup Omnipose integration</title>
      <link>https://www.jipipe.org/installation/third-party/omnipose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/installation/third-party/omnipose/</guid>
      <description>Explains the setup of JIPipe&amp;rsquo;s Cellpose integration</description>
    </item>
    
    <item>
      <title>Setup Python integration</title>
      <link>https://www.jipipe.org/installation/third-party/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/installation/third-party/python/</guid>
      <description>Explains the setup of JIPipe&amp;rsquo;s Python integration</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/examples/how-to-browse-results/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-browse-results/step2/</guid>
      <description>Select the results directory Click Open Result directories contain a file project.jip and a log file log.txt. In our examples, the are usually folders ProjectAndCache.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/advanced/imagej-macros/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/imagej-macros/step2/</guid>
      <description>In the macro node (red arrow 1), choose the Examples tab (red arrow 2) and select the option Input and output an image (red arrow 3).
It will auto-configure the node with one image input and one image output, as well as provide a convenient scaffold for adding custom macro code.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step2/</guid>
      <description>Now the new File node will appear on the work area.
The File nodes contains information where JIPipe should look for files. It is related to Folder (a directory) and Path (a file or directory).
If you want to reference multiple files/directories/paths, you can also use File list/Folder list/Path list.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/annotating-data-with-measurements/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotating-data-with-measurements/step2/</guid>
      <description>Add the node Annotate data with table values to the UI (red arrow 1).
In the Parameters tab (red arrow 2) add the average density as an image annotation (red arrows 3 and 4).
Each annotation consists of two parts:
The Name is the name of the annotation. Set it to &amp;quot;Density&amp;quot;. Please note that this is an expression (as the text is colored) and text should be put into quotes.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-2/step2/</guid>
      <description>To add a new slot, click the ➕ button (red arrow 1) and use the Add slot window (red arrow 2) to add an Image slot (red arrow 3). Name the new slot accordingly (red arrow 4) and add it to the node (red arrow 5).
The Split &amp;amp; filter by annotations node has a configurable number of outputs. The ➕ allows the addition of new slots with a specified name and data type.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step2/</guid>
      <description>Adding the node Annotate by image statistics (Expression) and configure the Generated annotations parameter in its parameter tab as following:
Set Generator to stat_mean (the mean intensity value; click Edit to find out more about variables) Set Column name to MeanIntensity (the column name refers to the name of the generated annotation) If you run the node via Update cache, you will see a new annotation MeanIntensity.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step2/</guid>
      <description>The same cache options are of course available directly from inside the Processing node.
To run all the nodes and save their results in cache, use the green arrow in the bottom-most node (Processing output, red arrow 1) and choose the Cache intermediate results option (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step2/</guid>
      <description>In the Cache browser tab (red arrow 1), the presented results can be filtered via the search field (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/comment-nodes/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/comment-nodes/step4/</guid>
      <description>This image is from the standard ImageJ samples, described in ImageJ as follows:
This image is made from a Molecular Probes demo slide: Cells: bovine pulmonary arthery endothelial cells Blue: nucleus stained with DAPI Green: Tubulin stained with Bodipy FL goat anti-mouse IgG Red: F-Actin stained with Texas Red X-Phalloidin We can add this information as a comment to the pipeline. Use the search bar (red arrow 1) to find the Comment node (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step2/</guid>
      <description>Click on the Add new compartment button (red arrow 1) and use the Input window (red arrow 2) to add a new compartment Processing (red arrow 3).
Click OK to add the new compartment to the GUI (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step2/</guid>
      <description>Select the newly added node (red arrow 1) and go to Parameter (red arrow 2).
Experiment with the node by setting the Sigma (X) parameter (red arrow 3) to various value by running the node and examining the cache content.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-1/step2/</guid>
      <description>In the Cache browser switch to the Import/Export tab (red arrow 1). Here you can manually export data into a JIPipe-compatible format. You have two options:
Exporting the the currently viewed table of data (red arrow 2) as ZIP or directory Exporting the cache of the whole node (red arrow 3) as directory The difference between these options is that the cache export ensures that you can later load in the result back into the current node via the Import function in the Cache section.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step2/</guid>
      <description>In the Cache browser switch to the Import/Export tab (red arrow 1). Here you can manually export data into a list of files based on the existing annotations.
Click the As files button in the Data category.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step2/</guid>
      <description>&amp;hellip; and click on the grey downwards arrowhead at the bottom right of the node (red arrow 1) to activate the node connection menu (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step2/</guid>
      <description>Scroll down the list of matching node names till the proper node is found.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step2/</guid>
      <description>The search option works based on keywords, providing the closest matches. Using Import image (red arrow 1) will produce the proper node close to the top results (red arrow 2), from where the node can simply be dragged to the GUI with the mouse, left button down (red arrow 3).
The node Import image consumes a JIPipe-managed File data and passes it into ImageJ for importing. The resulting ImageJ image is packaged into a JIPipe-managed image type.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step2/</guid>
      <description>Chose a template with one compartment.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step2/</guid>
      <description>Open the example pipeline, go to the Compartments tab (red arrow 1) and run the Process compartment (red arrow 2). Use the Cache intermediate results method (red arrow 3) to be able to see the cache content of all nodes in both compartments (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step2/</guid>
      <description>Drag the data folder to the GUI (red arrow 1) and run the node (red arrow 2). Go to the Cache browser (red arrow 3) and observe the entry, which corresponds to the newly added folder. Double-clicking the cache entry will open the folder in the file explorer (red arrow 5).
Dragging one or multiple files/directories into a JIPipe pipeline will automatically create a File list/Folder list/Path list node at the mouse location.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step2/</guid>
      <description>Now we need to get a list of the image files in all the (sub)folders. Use the node finder (red arrow 1) and check for list nodes (red arrow 2). Choose the List files node (red arrow 3), making sure that node will be created (red arrow 4). Add the new node (red arrow 5).
The node List files consumes JIPipe-managed Folder data and produces the corresponding list of contained files/directories as output.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step2/</guid>
      <description>The number of channels can be easily figured out from the image viewer. Double click on the image in the cache of the Import image node (red arrow 1) and note the three listed channels (red arrows 2, 3, 4).
In the image viewer, the channels can be selected via a slider (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/node-parameters/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/node-parameters/step2/</guid>
      <description>Connect the new node to Import image (red arrow 1)</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step2/</guid>
      <description>Select the Find particles 2D node (red arrow 1) and examine the Parameters tab (red arrow 2).
In addition to the name parameter (red arrow 3), the minimum and maximum values of the size and circularity (red arrows 4 to 7) can be controlled here, similarly to how it works in ImageJ.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step2/</guid>
      <description>Create a new JIPipe project (red arrow 1) using a template (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step2/</guid>
      <description>Add a Cellpose (2.x) node to the UI (red arrow 1) and connect it to the Import images node (red arrow 2).
In the Parameters tab (red arrow 3) observe the default annotation Diameter (which is the size guidance for the objects to be found; red arrow 4) and set the Average object diameter parameter to Enabled and its value to 120 (red arrow 5).
Set the segmentation model to Cytoplasm (red arrow 6), which is one of the pre-trained models of Cellpose, and it should work well with the general circular shape of the droplets.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step2/</guid>
      <description>Drop the data folder on the UI (red arrow 1) and add the nodes List subfolders and Add path to annotations (red rectangle 2).
Configure the Add path to annotations to generate an annotation #Folder (red arrow 3). Note the # to make it recognizable by the data management system as mode to group data.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step2/</guid>
      <description>Right-click anywhere in the white area of the GUI (red arrow 1) and select the Group option (red arrow 2.)
The Group option will automatically add and configure a node of the type Group. You can also add node groups via already established means to add nodes.
Group nodes contain a dedicated pipeline that is automatically executed when the node itself is run.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step2/</guid>
      <description>Choose between having a global (red arrow 1) or local (red arrow 2) template. The former will make the new template available from any project, whereas the latter will restrict its availability to the current project.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step2/</guid>
      <description>Add a Gaussian blur 2D (red arrow 1) and an Auto threshold 2D node (red arrow 2), as well as a Find particles 2D node (red arrow 3) to the UI and connect them as shown in the figure.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/ui/change-temp-directory/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/change-temp-directory/step2/</guid>
      <description>Choose Runtime (red arrow 2), activate the Override temporary directory (red arrow 3), and select/create a new target directory (red arrow 4) for the temporary result files.
The settings are automatically saved.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/ui/image-viewer-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/image-viewer-1/step2/</guid>
      <description>To draw ROIs, click on the ROI tab (red arrow 1), select to have ROIs as overlays (default!; red arrow 2), and click on More settings for further options (red arrow 3). Here the options to change the fill and line colors (red arrows 4 and 5, resp.), and to project the Z, the channel or the time dimension(s) are available (red arrows 6, 7, 8, resp.).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/ui/node-examples/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/node-examples/step2/</guid>
      <description>Look for the example on Morphological operation 2D: internal gradient (red arrow 1), add it to the pipeline by dragging it on the GUI with the mouse (red arrow 2) and connect it to the previous node (red arrow 3). Now look for the example on ImageJ Macro: input and output an image (red arrow 4, drag it to the pipeline (red arrow 5) and connect it (red arrow 6).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/ui/project-backups/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-backups/step2/</guid>
      <description>The list will show the available backup files, the top one being the most recent (red arrow 1). The backup filename contains the original name of the JIPipe project (red line 2) for easy orientation.</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step2/</guid>
      <description>For the simplest option, choose a one-compartment model (red arrow 1) and click New project (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step2/</guid>
      <description>Choose the three-compartment model (red arrow 1) and click “New project” (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/ui/project-open/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-open/step2/</guid>
      <description>Choose to open the existing project either in the current window, or in a new window.</description>
    </item>
    
    <item>
      <title>User interface</title>
      <link>https://www.jipipe.org/faq/user-interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/faq/user-interface/</guid>
      <description>Does JIPipe have a dark mode? Yes, you can enable it in Project &amp;gt; Application settings &amp;gt; UI &amp;gt; General &amp;gt; Theme. Set the theme to Modern dark and restart JIPipe/ImageJ.
The nodes are so large. Can they be more compact? Yes, there are multiple view modes available, including a horizontal and compact vertical mode. See here for more info.
How can I make long connections without zooming out? Click the arrow button at the input/output slot.</description>
    </item>
    
    <item>
      <title>Data processing</title>
      <link>https://www.jipipe.org/faq/data-processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/faq/data-processing/</guid>
      <description>What are those compartments for? Imagine you have a large complicated pipeline. Most certainly, you could split it into multiple sub-pipelines like &amp;ldquo;preprocessing&amp;rdquo; or &amp;ldquo;segmentation&amp;rdquo;. Compartments allow you to do exactly this.
What is the difference between groups and compartments? If you use compartments, JIPipe is still aware of the whole pipeline. This allows it to run all dependency nodes via Update cache or Quick run. Groups are independent pipelines that are not aware where they are used.</description>
    </item>
    
    <item>
      <title>Importing from JSON: Step 2</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/json2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/json2/</guid>
      <description>You will now have two options that determine where the loaded templates will be stored:
Globally: the newly imported templates will be available in whole JIPipe (all projects) Inside project: the templates will be directly stored inside the project and thus only available within the project itself Choose the option that is most convenient for you.
You can also move templates from/to global store into/from project storage via the Manage menu.</description>
    </item>
    
    <item>
      <title>Loading: Step 3</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/step3/</guid>
      <description>You will have two options:
This window will open the project in the current window New window will create a new JIPipe window for the project Choose the option that is most convenient for you.
Afterwards, the project will be opened in the JIPipe editor.
To execute the pipeline, you have two options:
Running the whole pipeline: 👉 this is recommended for running finalized pipelines on the full dataset Caching specific nodes or compartments: 👉 use this option if still want to modify the pipeline or want to review intermediate results </description>
    </item>
    
    <item>
      <title>Setup R integration</title>
      <link>https://www.jipipe.org/installation/third-party/r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/installation/third-party/r/</guid>
      <description>Explains the setup of JIPipe&amp;rsquo;s R integration</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step2/</guid>
      <description>Position the Annotate with image properties node on the workspace (red arrow 1). Disconnect the Import image node from the Split channels node (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 2</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step2/</guid>
      <description>Parameters that belong to the member nodes of the group can be made accessible directly.
Activate the group node (red arrow 1), go to Parameters (red arrow 2) and select Edit parameter references (red arrow 3).
In the new Edit parameters window (red arrow 4) select Add (red arrow 5 and choose Empty group (red arrow 6).
The second option, Node as group, will add all exportable parameters to the list.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/examples/how-to-browse-results/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-browse-results/step3/</guid>
      <description>You will have two options:
This window will open the project in the current window New window will create a new JIPipe window for the project Choose the option that is most convenient for you.
Afterwards, the project will be opened in the JIPipe editor.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/advanced/imagej-macros/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/imagej-macros/step3/</guid>
      <description>Go back to Parameters (red arrow 1) and add the following macro code to the indicated place (red arrow 2) that needs to be executed here (red arrow 3):
run(&amp;#34;Auto Local Threshold&amp;#34;, &amp;#34;method=[Try all] radius=5 parameter_1=0 parameter_2=0 white&amp;#34;) This example macro executes the 15 local thresholding methods of ImageJ on the blob image, using a radius of 5.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step3/</guid>
      <description>When the new node is clicked on and activated, it will be surrounded by a dashed rectangle(red arrow 1). Make sure that the Parameters tab is active on the right side(red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/annotating-data-with-measurements/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotating-data-with-measurements/step3/</guid>
      <description>Connect the node to the merged table (red arrow 1) and to the image (red arrow 2).
Run the node and observe the Cache browser (red arrow 3). The average density now appears as a new annotation (red arrow 4, red rectangle 5).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step3/</guid>
      <description>Move the Split channels node lower and position the annotations node in between (red arrow 1). Connect the node to the Import image node above (red arrow 2) and the Split channels node below (red arrow 3)</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-2/step3/</guid>
      <description>In the Slots tab (red arrow 1) we can also change the properties of the already present first output slot.
To do this, select the slot to be edited (red arrow 2). Here the data type can be changed if necessary (red arrow 3) and a new name can be entered (red arrow 4). When done editing, accept the changes (red arrow 5).
You can also modify/delete/re-arrange slots by either clicking the ▼ located on the node or by right-clicking the slot within the graph editor.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step3/</guid>
      <description>Add an Auto threshold 2D node and run it with Update cache.
Observe that the set of annotations include both the calculated Threshold and the MeanIntensity value that was generated in the last step.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step3/</guid>
      <description>When only the last node’s cache needs to be updated, e.g., after changing parameter(s) only in that node (red arrow 1), the option of Update cache can be used (red arrow 2). The pop-up explanation will also explain the action of the chosen option (red arrow 3).
Update cache and Cache intermediate results have the same behavior. The only difference between these two caching options is whether intermediate results are stored.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step3/</guid>
      <description>E.g., looking only for ROI data, we can use the search term ROI in the search field (red arrow 1), and see only the ROI results.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/comment-nodes/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/comment-nodes/step5/</guid>
      <description>Add the Comment node to the GUI (red arrow 1). Link the node to the Folder list node (red arrow 2) (or to any node).
The Comment node does not execute any command, only stores additional information. The information can be text or image(s). We copy the text from the ImageJ info box into the node using the Description field (red arrow 3), using the text (red line 4) and the RGB-converted image from the image viewer of the Import image node (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step3/</guid>
      <description>The new compartment will now appear on the GUI (red arrow 1).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step3/</guid>
      <description>With Sigma set to 5, the cache (red arrow 1) should show a blurred image as shown below (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-1/step3/</guid>
      <description>JIPipe comes with a node that allows the automated export of data into the standardized format.
This can be achieved by adding (red arrow 1) the node Export data table and connecting it to the output of any node (red arrow 2).
For example, we connected the node to the AVG density output of the Analysis output.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step3/</guid>
      <description>We recommend to create an empty directory for the storage of the exported data (red arrows 1 and 2).
Then choose the directory and click Open.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step3/</guid>
      <description>This will show a list of compatible nodes, i.e., nodes that can accept the datatype from the active node. In this example node, which provides an image file location, the 2nd hit is the proper choice: Import image (red arrow 1)
The node Import image consumes a JIPipe-managed File data and passes it into ImageJ for importing. The resulting ImageJ image is packaged into a JIPipe-managed image type.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step3/</guid>
      <description>This will add the new node to the GUI, but it will not be connected yet (red arrow 1).
The node will appear the the ⌖ icon. The location of the symbol is changed by clicking on the pipeline area.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step3/</guid>
      <description>The new node will appear on the GUI (red arrow 1)</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step3/</guid>
      <description>Locate the data folder that belongs to this tutorial (red arrow 1) and drop it on the UI (red arrow 2).
Click somewhere on the white area of the UI (red arrow 3) and chose the Node templates tab (red arrow 4).
👉 This tutorial requires that you have installed two node templates Split channels: three channels, R, G, B order and Import images.
If you do not have these templates, you can download them via Manage &amp;gt; Download more templates or by importing the Templates.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step3/</guid>
      <description>Look for nodes with the name extract (red arrow 1) and choose the Extract image statistics node (red arrow 2).
Extract image statistics measures statistics on the whole image or an optional ROI. It is related to the node Extract ROI statistics that requires a ROI and optionally requires an image. Both nodes apply the same ImageJ measurement algorithm.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step3/</guid>
      <description>Use the Find matching algorithm option (red arrows 1 and 2) to look for annotation nodes (red arrow 3) that are compatible with the folder node, and choose the Annotate with path properties node (red arrow 4)
The node Annotate with path properties allows to annotate the incoming File/Folder/Path object with information that can be read by JIPipe. As annotations are preserved during the processing steps, this will enable a multitude of advanced operations .</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step3/</guid>
      <description>Go to Parameters of the new node (red arrow 1)and check Recursive (red arrow 2). Run the node (red arrow 3) with Update cache.
By default, the node will only list the direct children of the current path. Recursive ensures that also the N-th children are detected.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step3/</guid>
      <description>The image contrast can be selected from a list (red arrow 1), using Auto (red arrow 2) is the default setting. The multichannel image can be converted into an RGB image (red arrow 3), whereas the zoom factor can be set via a +/- button set (red arrow 4). The resulting image can be exported or copied into the system cache as described before (red arrow 5).
Basic information about the image (resolution, bit depth, etc.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/node-parameters/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/node-parameters/step3/</guid>
      <description>Click on the Gaussian Blur 2D node to activate it (red arrow 1), and select the Parameters tab on the right (red arrow 2).
The interface will show the Sigma parameters of the Gaussian blur, separately for X and Y (red arrows 3 and 4, respectively).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step3/</guid>
      <description>Run the Find particles 2D node (red arrow 1), preferable with Cache intermediate results (red arrow 2). Examine the cache via the Cache browser (red arrow 3).
The identified regions of interest are measured (red arrow 4) and the ROIs are also saved (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step3/</guid>
      <description>Locate the data folder that belongs to this tutorial (red arrow 1) and drop it on the UI (red arrow 2).
Click somewhere on the white area of the UI (red arrow 3) and chose the Node templates tab (red arrow 4).
👉 This tutorial requires that you have installed node template Import images.
If you do not have the template, you can download it via Manage &amp;gt; Download more templates or by importing the Templates.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step3/</guid>
      <description>Still in Parameters (red arrow 1), select the outputs of your choice.
In this example, we will chose the segmented areas as ROIs (red arrow 2), the flows (red arrow 3), and the probability map (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step3/</guid>
      <description>Note that the training dataset (red arrow 1) consists of subfolders (red arrow 2) with matching pairs of TIFF and ZIP files (note 3).
The latter contains the manually annotated objects as ROIs, designed to be used by the Cellpose trainer.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step3/</guid>
      <description>The group dialogue window (red arrow 1) will allow to choose between keeping the original nodes (red arrow 2) or not; for now, we will keep the original nodes, so as to be able to compare the outcome of the group with that of the original node array.
Another reason to keep the original nodes is that the nodes inside a group DO NOT provide a cache, thus we can’t check the outcome of the individual nodes inside a group.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step3/</guid>
      <description>Use the newly opened Create template window (red arrow 1) to set the name of the template (red arrow 2), and to provide a description (red arrow 3). When done, click OK to save the new template (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step3/</guid>
      <description>Gaussian blurring and thresholding are both sensitive to their parameter settings.
Thus it is often useful to test multiple parameters for such nodes by connecting them up to a selection of parameters that can be tested within the same run of the project.
In JIPipe, multiple parameter sets are defined by a dedicated set of nodes, one of which is termed Define multiple parameters.
Begin by adding Define multiple parameters into the pipeline (red arrow 1).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/ui/image-viewer-1/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/image-viewer-1/step3/</guid>
      <description>Activate the Drawing tools (red arrow 1), and use the Ellipse, Polygon, Rectangle, and Pencil tools (red arrows 2, 3, 4, 5, resp.) to draw the corresponding shapes on the image (red labels 2, 3, 4, 5, resp.).</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/ui/node-examples/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/node-examples/step3/</guid>
      <description>Now run the project. The resulting image will be an outline of the blobs from the example image.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/ui/project-backups/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-backups/step3/</guid>
      <description>The following steps are optional. By default, JIPipe will store backups into the Fiji.app/jipipe/backups directory.
The location of the backup files can be customized via going to the Project tab (red arrow 1) and choosing the Application settings tab (red arrow 2). This will open a new tab in the JIPipe main GUI (red arrow 3). Choose the backup tab (red arrow 4) to set a custom folder for the backup projects.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step3/</guid>
      <description>Select either “This window” (red arrow 1), the new project will take over the current active window) or “New window” (an additional window will open, useful if wanting to work or compare two projects; (red arrow 2). )</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step3/</guid>
      <description>Select either “This window” (red arrow 1), the new project will take over the current active window) or “New window” (an additional window will open, useful if wanting to work or compare two projects; (red arrow 2). )</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/ui/project-open/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-open/step3/</guid>
      <description>Now the saved project will reopen, showing the compartment structure(s).
JIPipe will always attempt to restore the UI configuration (tabs etc.) that was present during the saving of the project.</description>
    </item>
    
    <item>
      <title>ImageJ integration</title>
      <link>https://www.jipipe.org/faq/imagej-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/faq/imagej-integration/</guid>
      <description>Can I use plugins from ImageJ in JIPipe? Yes. Either there is an integration available, or you just use the macro node and input the corresponding macro code that runs the plugin.
Can I use existing ImageJ macros in JIPipe? Yes, use Images &amp;gt; ImageJ macro. The input slots are opened as image windows and can be addressed from within the macro with selectWindow(). You can also load an example that shows how to use the node.</description>
    </item>
    
    <item>
      <title>Importing from JSON: Step 3</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/json3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/json3/</guid>
      <description>In this example, the option Inside project was chosen.
You can now see the newly added templates and use them by dragging them into the pipeline.</description>
    </item>
    
    <item>
      <title>Running the whole pipeline: Step 1</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/running1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/running1/</guid>
      <description>To run the whole pipeline, click the Run button at the top right.
Running a pipeline will store the results to the hard drive. While the generated directory structure can be browsed by humans, it is mainly designed to be opened by the JIPipe result browser.
If you want to re-open a generated results directory, navigate to Project &amp;gt; Open analysis output
If you intend to export files in a form that is more suitable for humans, please check out our tutorials.</description>
    </item>
    
    <item>
      <title>Step 3</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step3/</guid>
      <description>The new group parameters window (red arrow 1) can be (re)named (red arrow 2), and provided with a description (red arrow 3).
The description editor can be in compact, full or HTML mode (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/examples/how-to-browse-results/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-browse-results/step4/</guid>
      <description>You will have two options:
Load in new tab will open the results in a memory-efficient result browser Load into cache will load all results into the memory cache (Please be careful with this option if your data is very large) Choose Load in new tab.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/advanced/imagej-macros/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/imagej-macros/step4/</guid>
      <description>Go back to Parameters (red arrow 1) and add the following macro code to the indicated place (red arrow 2) that needs to be executed here (red arrow 3):
run(&amp;#34;Auto Local Threshold&amp;#34;, &amp;#34;method=[Try all] radius=5 parameter_1=0 parameter_2=0 white&amp;#34;) This example macro executes the 15 local thresholding methods of ImageJ on the blob image, using a radius of 5.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step4/</guid>
      <description>To choose a concrete file, click on the navigation tab (red arrow 1), navigate to the folder where the image file is (red arrow 2), and choose the image to be loaded (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step4/</guid>
      <description>Select the Annotate with image properties node (red arrow 1) and go to the Parameters tab (red arrow 2). Select as many image properties from the list as you like; as an example, we selected five properties as shown in the figure (red arrows 3 to 7).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-2/step4/</guid>
      <description>To activate the filtering function, select the Edit option for expressions (red arrow 1).
In the expression editor window (red arrow 2) look for a number conversion function (red arrow 3) and select the TO_NUMBER function (red arrow 4). Choose the Variable value type (red arrow 5) and paste in the name of the variable based on which the filtering will be done (here: Image composite channel count as seen in the previous tutorial, red arrow 6).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step4/</guid>
      <description>Let&amp;rsquo;s calculate the difference between the threshold and the mean image intensity.
Add a node Set/Edit annotations and navigate to its Annotations parameter.
Set the Value to ABS(TO_NUMBER(MeanIntensity) - TO_NUMBER(Threshold)) Set the Name to ThresholdDiff On running the node you should notice a new annotation ThresholdDiff that is set to the absolute difference between the threshold and mean image intensity.
Set/Edit annotations allows you to create new annotations by setting their value and to combine existing annotations or apply operations on them.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step4/</guid>
      <description>The next option in the menu (red arrow 1) is Run &amp;amp; show results (red arrow 2) that will calculate and save the results as explained on the UI (red arrow 3).
Update cache and Cache intermediate results store the results into the RAM, while Run &amp;amp; show results amd Show intermediate results store all results to the hard drive into a temporary directory (also see the tutorial how to change this directory).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step4/</guid>
      <description>Updating the cache of the specified node is also possible directly from here (red arrow 1) using the usual two options (red arrow 2 and 3).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step4/</guid>
      <description>Reposition the new node (red arrow 1) and connect it to the Preprocessing compartment (red arrow 2).
👉 This connection will transfer the data from the Preprocessing compartment to the new Processing compartment via the built-in output and input nodes of the compartments. These still need to be set up, which we will do next.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step4/</guid>
      <description>A simple segmentation can achieved by automatic thresholding. We search for such node e.g., via the Find matching algorithms option (red arrow 1) and searching for auto threshold (red arrow 2). Choose the matching node (Auto threshold 2D, red arrow 3) and add it to the pipeline (red arrow 4).
The Auto threshold 2D node is the JIPipe equivalent of the ImageJ command Image &amp;gt; Adjust &amp;gt; Auto threshold.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-1/step4/</guid>
      <description>By default, the Export data table node will store its output inside a automatically generated directory relative to the current output path (for cache runs it is in a temporary directory.
Alternatively, you can provide a custom path or one that is relative to the project directory:
To do this, select the Export data table node and navigate to the Parameters tab (red arrow 1).
Provide a relative output directory (i.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step4/</guid>
      <description>Now JIPipe will give you options that determine how the file names should be generated. This is required, as JIPipe does not know anymore the name of the original input file unless it is stored in the annotations.
The most important setting is the File name expression that defaults to
SUMMARIZE_ANNOTATIONS_MAP(annotations, &amp;#34;#&amp;#34;) The expression is applied for each exported data item and returns the file name that should be used. The default method will take all known annotations that are marked with a # and form a filename based on the following pattern:</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step4/</guid>
      <description>Clicking on the green arrowhead on the right (red arrow 1) &amp;hellip;</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step4/</guid>
      <description>To connect the Import image node to the File node, simply draw a line with the mouse, left button pushed, to connect the bottom white zone of the File node (red arrow 1) to the top white zone of the Import image node (red arrow 2).
The node Import image consumes a JIPipe-managed File data and passes it into ImageJ for importing. The resulting ImageJ image is packaged into a JIPipe-managed image type.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step4/</guid>
      <description>To connect the Import node to the File node, simply draw a line with the mouse, left button pushed, to connect the bottom white zone of the File node (red arrow 1) to the top white zone of the Import image node (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step4/</guid>
      <description>The Cache browser (red arrow 1) will now show the fluorescence image (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step4/</guid>
      <description>Drag the new node to the UI and position it below the Find particles 2D node (red arrow 1). For convenience, rearrange to input slots of the new node by moving its right-side node to the left (red arrow 2) by clicking the ▼ button on the ROI slot and selecting Move to the left.
You can also right-click a slot to open the slot settings menu.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step4/</guid>
      <description>In the Parameters tab (red arrow 1) a description can be added to clarify the role of the node (red arrow 2), and the path properties that need to be added to the annotations can be chosen (red arrow 3). The checkboxes are all set by default. The parameter names are listed as they can be referred to later in the processing, when we rely on the annotations (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step4/</guid>
      <description>Go to Cache (red arrow 1) and check that all file names are listed (red line 2); compare with the list of files on the hard drive.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step4/</guid>
      <description>The image will be split into three channels, as revealed by the image viewer.
To set up the Split channels node, we need to add three output channels, corresponding to the red, green, and blue channels of the raw image:
click on the ➕ sign to add a new slot to the Split channels node (red arrow 1). This will open the Add slot window (red arrow 2), where we search for image as data type (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/node-parameters/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/node-parameters/step4/</guid>
      <description>Change these parameters to adjust the amount of blurring. When the Y field has -1, its value will be set to the same as X. Change the value from 1 to 5 (red arrow 1), 10 and 20 &amp;hellip;</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step4/</guid>
      <description>Here 53 ROIs were found (column String representation, red arrow 1), and they can be directly observed by double-clicking the cache item (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step4/</guid>
      <description>The Cache browser (red arrow 1) will now show the fluorescence image (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step4/</guid>
      <description>The flow and probability maps are thresholded before the segmented ROIs are generated.
These threshold values can be set in the corresponding menu (red arrow 1), where the probability threshold (red arrow 2) and the flow threshold (red arrow 3) can be set.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step4/</guid>
      <description>Accordingly, we need to read the TIFF and ZIP files separately.
This can be achieved by establishing two branches, one each for the two file types by the introduction of two List files nodes that we renamed to List TIFF and List ZIP in our figure (red rectangle 1).
The List files node can be configured with a filter expression to only detect specific files. In the case of the the List ZIP node, set the expression to</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step4/</guid>
      <description>Select the new group node (red arrow 1), go to Parameters (red arrow 2) and change the name from the original Group to a more meaningful name (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step4/</guid>
      <description>To observe the newly created template node, click anywhere within the white area of the GUI (red arrow 1), select the Node templates tab on the right side (red arrow 2), and scroll down to find the newly added template (red arrow 3).
Note that the title of the node template (red arrow 4) and the detailed description (red arrow 5) also appear in the summary, together with the slots layout of the node (red line 6).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step4/</guid>
      <description> The parameter table generated by Define multiple parameters is empty by default. This is why you first have to create rows = parameter sets and columns = parameters.
We begin by adding a new column by applying the following steps.
To add a column ( = parameter) by selecting Import from node (red arrow 2), which will auto-configure a new column based on an existing node parameter Find the Auto threshold 2D entry (red arrow 3) Choose the Method parameter (red arrow 4) and select it (red arrow 5) </description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/ui/image-viewer-1/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/image-viewer-1/step4/</guid>
      <description>In the Draw menu (red arrow 1) activate the Import/Export tab (red arrow 2) and click on To ROI (red arrow 3) to convert the drawings to ROIs. Observe that the region outlines are now yellow, indicating that they are converted to ROIs.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/ui/node-examples/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/node-examples/step4/</guid>
      <description>Similarly, examples can be found by using the Available nodes tab (red arrow 1), typing in the search word (red arrow 2), and browsing thru and selecting the required example (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/ui/project-backups/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-backups/step4/</guid>
      <description>In the Backup tab (red arrow 1) activate the Custom path option on the right side (red arrow 2) and navigate to the new backup folder (red line 3)
It is worth to clear the backup folder every now and then, to save up space.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step4/</guid>
      <description>The new project will open in the Compartments view, where the (single) compartment “Analysis” (red arrow) will be seen. This is the default setting.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step4/</guid>
      <description>The new project will open in the Compartments view, where the three compartments “Preprocessing” (red arrow 1), “Analysis” (red arrow 2) and “Postprocessing” (red arrow 3) will appear.</description>
    </item>
    
    <item>
      <title>Downloading: Step 1</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/download1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/download1/</guid>
      <description>Navigate to Mange &amp;gt; Download more templates, which will contact our online template repository for newly available items.</description>
    </item>
    
    <item>
      <title>Result analysis</title>
      <link>https://www.jipipe.org/faq/result-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/faq/result-analysis/</guid>
      <description>Can I open a table in ImageJ instead of JIPipe or vice versa? Yes, and even more: Depending on the data type there are multiple options on displaying data available. Select the data in the result view or cache browser and click the &amp;ldquo;More&amp;rdquo; button at the bottom. JIPipe will even remember the last setting for you.
Can I save data by their metadata? Yes, use the node Miscellaneous &amp;gt; Export data.</description>
    </item>
    
    <item>
      <title>Running the whole pipeline: Step 2</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/running2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/running2/</guid>
      <description>Please choose an empty output directory or leave the default setting (temporary folder).
Proceed by clicking Run now.</description>
    </item>
    
    <item>
      <title>Running the whole pipeline: Step 3</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/running3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/running3/</guid>
      <description>Please choose an empty output directory or leave the default setting (temporary folder).
Proceed by clicking Run now.</description>
    </item>
    
    <item>
      <title>Step 4</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step4/</guid>
      <description>In order to now add parameters to the group, click on Add parameter reference (red arrow 1) and browse the new Add parameter window (red arrow 2).
Chose e.g. Annotate with path properties (red arrow 3) and select Annotate with size (red arrow 4), Annotate with type (red arrow 5) and Annotate with parent path (red arrow 6), and accept the selection (red arrow 7).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/examples/how-to-browse-results/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-browse-results/step5/</guid>
      <description>You now can browse through the results.
Double-click items to open them in JIPipe or ImageJ (depending on the data type).
If you want more information about the result browser, please visit the result browser documentation.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/advanced/imagej-macros/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/imagej-macros/step5/</guid>
      <description>Now we build-in another macro node, this time we will only use the Phansalkar method, as this is judged to be the most successful thresholding method after examining the output of the first macro node. The new node (red arrow 1) was set up as the first one, the macro code (red arrow 2) will run this specific method only (red arrow 3).
run(&amp;#34;Auto Local Threshold&amp;#34;, &amp;#34;method=Phansalkar radius=5 parameter_1=0 parameter_2=0 white&amp;#34;) </description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step5/</guid>
      <description>Run the node by clicking on the green arrowhead inside the node (red arrow), &amp;hellip;</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step5/</guid>
      <description>Run the Annotate with image properties node (red arrow 1) and observe the cache (red arrow 2).
The annotations table in the cache browser now contains the image properties that were previously selected (red arrow 3 to 7).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-2/step5/</guid>
      <description>Enter the same filtering formula for the 1-channel slot (red arrow 1).
Easiest is to copy-paste the content of the Three-channel slot expression (red arrow 2) and change the channel number to 1 (red arrow 3).
The formulas now should be:
Three channels: TO_NUMBER($&amp;quot;Image composite channel count&amp;quot;) == 3 1-channel: TO_NUMBER($&amp;quot;Image composite channel count&amp;quot;) == 1 </description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step5/</guid>
      <description>Let&amp;rsquo;s assume that we need the ThresholdDiff annotation in an earlier step (the raw image) or even completely different &amp;ldquo;branch&amp;rdquo; of processed data. JIPipe provides a node to copy annotations between two data sets: Merge annotations.
Begin by adding Merge annotations into the graph and navigate to the Examples tab. Here, load the example Merge annotations (2 inputs) for convenience. Alternatively, you can create the inputs yourself.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step5/</guid>
      <description>The results will appear in a new tab (red arrow 1) that will present the results (red arrow 2) that will show the origin of the outcome (red arrow 3) as Processing compartment and Find particles 2D node.
The outcome will contain the ROI table and the measurements, as expected for this node (red rectangle 4).
The opened UI is connected to a directory on the hard-drive that is located within the temporary directory as defined by your operating system (also see the tutorial how to change this directory).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step5/</guid>
      <description>Similarly to the project-wide cache browser tab, clearing the cache is also possible from this window, aiming either at all cache content (red arrow 2), or only at the outdated content (red arrow 3).
Cached data is outdated if its producing nodes (or their predecessors) were deleted or have different parameters compared to when the data was generated.
For example, if a predecessor Gaussian blur 2D node&amp;rsquo;s sigma value is changed, all successor node&amp;rsquo;s cached data is marked as outdated.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step5/</guid>
      <description>Go to the Preprocessing compartment by double-clicking the its node and locate the Preprocessing output node (red arrow 1).
Move the node close to the rest of the nodes, click on the ➕ button to add a new input slot (red arrow 2). The input type should be an image, so use image as a search word (red arrow 3). The Image type will now be selected (red arrow 4) and the new slot will be given a name (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step5/</guid>
      <description>The Parameters tab (red arrow 1) exposes the settings, the most important of which (for this tutorial) are indicated by the red arrow 2 to 5:
Calculate threshold based on ... allows to determine a ROI/mask from where the image threshold is calculated from (defaults to whole image) Method determines the thresholding algorithm (defaults to ImageJ&amp;rsquo;s default thresholding) Threshold annotation determines if generated masks should be annotated with the calculated threshold value (defaults to an annotation Threshold) </description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-1/step5/</guid>
      <description>Running the Export data table node now generates a directory next to the project file that follows the standardized JIPipe output format.
The actual data is contained in the data.csv file in the 0 directory (because it is the first row of the data table; red arrow 1). All other files contain the metadata.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step5/</guid>
      <description>Open the directory after the export. You see that the exporter stored the data into an appropriate format.
You can also clearly see the pattern [Annotation 1 name]=[Annotation 1 value] as determined by the expression.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step5/</guid>
      <description>&amp;hellip; will add the new node, already connected to the previous one</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step5/</guid>
      <description>The resulting connection is symbolized by a color line connecting the two nodes (red arrow 1). This shows the dataflow between the nodes, the direction is indicated by the arrowhead at the bottom of the connecting line.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step6/</guid>
      <description>Run the new node as described earlier: click on the green arrow of the bottom node (red arrow 1) and choose one of the running modes (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step5/</guid>
      <description>Next navigate to the Node templates tab (red arrow 1) and drag the Split channels: three channels R, G, B order template (red arrow 2) onto the graph.
Connect the newly created node to the output of Import images.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step5/</guid>
      <description>Connect the node (red arrow 1) to the ROI output of the Find particles 2D node to get the list (red arrow 2).
Connect the Image input to the 1-channel output of the Preprocessing output node (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step5/</guid>
      <description>These names can also be changed to something easier to remember, or more specific. In this case, we will call this the Main folder (red arrow 1), and we will turn off the Parent and Type annotations (red arrows 2, 3), as they are at this time unnecessary</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step5/</guid>
      <description>The file names also need to be annotated. Here we will use a simpler approach via the Add path to annotations node (red arrow 1); add this node via any of the ways we have seen before.
Rename the Generated annotations field to #Filename, to make it more specific (the default name of Dataset, which is very general). The # before the name indicates that this annotation is of primary importance, e.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step5/</guid>
      <description>The Split channels node can be set up from the Parameters menu.
By repeating the red channel addition for green and blue, we end up with the necessary three-channel output (red arrows 1, 2, 3). The output channels are assigned to those of the incoming image, starting the channel counting at zero (red arrows 4, 5, 6). The new channel indices and names are added to the annotation system (red arrows 7, 8).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/node-parameters/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/node-parameters/step5/</guid>
      <description>&amp;hellip; and run the project as described before (red arrows 1 and 2).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step5/</guid>
      <description>Similarly, the Measurement table (red arrow 1) can be opened in a new window (red arrow 2) by double-clicking. The measured parameters are the same as provided in ImageJ (red rectangle 3), and we can also observe the annotations (red rectangle 4).
Many interfaces that can be opened by double-clicking entries in the cache browser allow to update the cache directly within the interface via the Update cache button. By this way, you can track a specific result of interest while testing different parameters.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step5/</guid>
      <description>Add the Basic blob finder template to the UI (red arrow 1) and observe the Parameters tab (red arrow 2).
The exposed parameter of the group node are indicated here (red rectangle 3), including the particle size and circularity ranges, the thresholding method and the gaussian smoothing factor.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step5/</guid>
      <description>Guidance for these levels can be gained from examining the probability map and identifying the typical levels at the image features of interest.
In the Cache browser (red arrow 1) choose the Probabilities data slot (red arrow 2) and examine the outcome (red rectangle 3). Open an item of interest by double-clicking it and use the mouse pointer to observe the values.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step5/</guid>
      <description>Cellpose training requires label images or masks.
The can be created directly from ROI, for example via the node Convert ROI to mask, given the input image as reference (red arrow 1).
The generated mask will be dilated before being used for the Cellpose training (red arrow 2). The dilation serves the purpose of adding environment to the manual annotations, which should help the learning process (red arrows 3-5).
Setting the Radius parameter (red arrow 4) to various values may help to optimize the learning process.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step5/</guid>
      <description>In order to use the new group node, we will connect it to the nodes preceding and proceeding the individual file reading nodes. Select the Split channels node (red arrow 1) and duplicate it (red arrow 2).
Here we opt to create a branching path instead of replacing the existing nodes. You are completely free to replace nodes with groups or implement a branching how you see fit.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step5/</guid>
      <description>To add the template node into the pipeline, grab it with the mouse (red arrow 1) with the left button down, and drag it onto the GUI (red arrow 2).
It is also possible to select and add multiple nodes from the template list and drag them to the project area; use SHIFT+Left-click or Ctrl+Left-click to select multiple nodes from the template list.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step5/</guid>
      <description>Click on Add (red arrow 1) to add a new row ( = parameter set), which will add the first thresholding method (Default) of ImageJ to the parameter list (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/ui/image-viewer-1/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/image-viewer-1/step5/</guid>
      <description>In the ROI menu (red arrow 1) click on Selection (red arrow 2) and observe the list of the four new ROIs (line 3). Click on Measure (red arrow 4) to create the per-ROI analysis in a separate window (red arrow 5). The measurements are according to the ImageJ list of available parameters (red line 6).</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step5/</guid>
      <description>By double-clicking on the Analysis node, or clicking on the Analysis tab, the Analysis compartment will open. Right now it will be empty except for the output node, which is a standard unit in every Compartment.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step5/</guid>
      <description>The three Compartments will be connected in their logical order.</description>
    </item>
    
    <item>
      <title>Downloading: Step 2</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/download2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/download2/</guid>
      <description>Please select the templates that will be downloaded.
Proceed by clicking Download selected templates.
We currently made only a small selection of templates available that are related to our tutorials. The list will be expanded in the future.</description>
    </item>
    
    <item>
      <title>Running the whole pipeline: Step 4</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/running4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/running4/</guid>
      <description>You now can browse through the generated results.
Double-click items to open them in JIPipe or ImageJ (depending on the data type).
If you want more information about the result browser, please visit the result browser documentation.</description>
    </item>
    
    <item>
      <title>Step 5</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step5/</guid>
      <description>The newly added exposed parameters are now visible in the Import image node (red arrow 1) Parameters menu (red arrow 2), where all three exposed parameters (red arrows 3, 4, 5) are now adjustable, without having to open the group graph. Direct editing of the nodes inside the group is still possible via opening the content in a new tab, as show before.
If you obtained the group node from a node template, re-create the template from the modified group node, as changes are not automatically stored inside templates.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/advanced/imagej-macros/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/imagej-macros/step6/</guid>
      <description>After running the particle finder node (red arrow 1), the local thresholding method finds 50 blobs (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step6/</guid>
      <description>&amp;hellip; and then selecting one of the top two options Update cache or Cache intermediate results.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step6/</guid>
      <description>Now we will filter the incoming images based on image properties. Since the next node will be a Split channel operation, we will need to limit our processing to images with three channels. For this we will use an annotations-based filter node.
Do a search in the upper search bar (red arrow 2) for filters and annotations. The first hit is an example of the node that we need (red arrow 3), this will provide an example of the syntax for filtering.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-2/step6/</guid>
      <description>Run the Split &amp;amp; filter by annotations node and observe the Cache browser (red arrow 1).
From the Data slot selector (red arrow 2) choose All outputs (red arrow 3) to see both the Three-channel (red arrow 4) and 1-channel (red arrow 5) outputs.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step6/</guid>
      <description>Connect the Set/Edit annotations output to one of the Merge annotations inputs, and the Generate from math expression output to the other.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step6/</guid>
      <description>The last menu (red arrow 1) item Show intermediate results (red arrow 2) performs similarly to the previous option (Run &amp;amp; show results), but presents the results of the intermediate nodes as well as explained by the pop-up comment (red arrow 3, red line 4).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step6/</guid>
      <description>Exporting the cache and its metadata can also be carried out via simple options.
Use the Import/Export tab (red arrow 1), choose e.g., the CSV/Excel option (red arrow 2) which will refer to the metadata (red arrow 3) and it will export the text annotations as a table (red arrow 4).
Exporting the metadata will yield a table with all information displayed in the cache browser table, excluding the underlying data (e.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step6/</guid>
      <description>Now the new input slot of the Preprocessing output node will appear (red arrow 1).
Repeat the same process for the next three input slots, one each for the green and blue fluorescence channel and for the single channel of the blob image (red arrows 2 to 4).
Please ensure that the following slots are present in the Preprocessing output node:
Red_3channel (type should be Image) Green_3channel (type should be Image) Blue_3channel (type should be Image) 1-channel (type should be Image) </description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step6/</guid>
      <description>The most important parameter to test is the thresholding method (Method, red arrow 1), which is set to Default (red arrow 2) when creating a new node.
The menu allows to choose from the wide range of ImageJ-based methods (red line 3).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-1/step6/</guid>
      <description>A benefit of the machine-readable JIPipe format is that all contained data and metadata can be conveniently restored by JIPipe.
Open the Tutorial_B22-1_Part1.jip project that comes pre-loaded with nodes that cover various import scenarios:
The node Import data table (archive) (red rectangle 1) can import a ZIP file generated by the cache browsers&amp;rsquo; ZIP-exporter function.
If the data is stored inside a directory (or if you just extract the ZIP), use the Import data table (directory) node (red rectangle 2 and 3).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step6/</guid>
      <description>JIPipe offers various nodes for the export of data that are even outside the scope of the exporter implemented in the cache browser.
You can find them in the Export menu or via the search bar.
Proceed to add and connect the following nodes:
Add Export data and connect it to AVG density Add Export image and connect it to Overlay image Add Export table as XLSX and connect it to All measurements Add Export ROI and connect it to ROI In the following steps, we will show how to configure these nodes for the export into a single directory.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step6/</guid>
      <description>Run the new node as described earlier: click on the green arrow of the bottom node (red arrow 1) and choose one of the running modes (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step6/</guid>
      <description>Run the new node as described earlier: click on the green arrow of the bottom node (red arrow 1) and choose one of the running modes (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step7/</guid>
      <description>The Cache browser on the right (red arrow 1) will now show the image after having been read into the project</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-3/step8/</guid>
      <description>As described before, double-clicking on the cache element (red arrow 1) will open it in a viewer (red arrow 2)
Basic information about the image (resolution, bit depth, etc.) can be found in the toolbar of the image viewer and within the &amp;ldquo;String representation&amp;rdquo; column in the cache browser.
The operations for File and Import image are different nodes, so you have the possibility to apply additional file manipulation operations (e.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step6/</guid>
      <description>We will now apply a look-up table (LUT) to one of the channels.
To do this, use the search bar (red arrow 1) to add the following nodes:
Set LUT (color map) (red arrow 3) Apply LUT (red arrow 2) Connect the input of Set LUT (color map) node to the Red output of Split channels: three channels R, G, B order.
Then connect the output of Set LUT (color map) to the input of Apply LUT</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step6/</guid>
      <description>Run the node (red arrow 1) and observe the cached result (red arrow 2) in a viewer (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step6/</guid>
      <description>Run the annotation node with the Cache intermediate results option (red arrow 1) and observe the cache (red arrow 2). The newly added annotations now appear in purple-labelled columns (red arrows 3, 4, 5).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step6/</guid>
      <description>Run the node (red arrow 1) and check the Cache (red arrow 2). Now the #Filename annotation (red arrow 3) is part of the image database.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/multi-channel-images-1/step6/</guid>
      <description>Run the Split channels node (red arrow 1) and observe the cache (red arrow 2).
The slot name (red arrow 3), data type (red arrow 4) and channel index (red arrow 5) are now shown as annotations, in addition to the three images on grey scale (red arrow 6).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/node-parameters/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/node-parameters/step6/</guid>
      <description>Observe the outcome by opening the resulting blurred images by double-clicking on the cache element, as shown before. Click on Open in ImageJ (red arrow 1) &amp;hellip;</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step6/</guid>
      <description>The table viewer (red arrow 1) provides additional functionalities (red rectangle), including saving the table as CSV or XLSX, applying a selection of functions, sending data to and from ImageJ results, etc.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step6/</guid>
      <description>In order to observe the quality of the segmentation, add a Convert ROI to RGB node (red arrow 1), connect it to the ROI and Image outputs of the Import images and Basic blob finder nodes (red arrows 2 and 3), and run it (red arrow 4).
In the Cache browser (red arrow 5), observe the entry (red arrow 6) and the full image (red arrow 7).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step6/</guid>
      <description>By examining the ROI output, it is evident that the results need to be filtered in order to select the round main object.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step6/</guid>
      <description>We continue with assigning the annotation masks to the actual images.
In preparation for this, we first correct the image for illumination inhomogeneities via Illumination correction 2D (red arrow 1), where we use 20 px radius for both Sigma (X) and Sigma (Y) in underlying Gaussian filter.
Both the image and the annotations are scaled (red arrows 2 and 3) with a factor of 2.5 (red arrow 4 and 5):</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step6/</guid>
      <description>Move the duplicated node (red arrow 1) below the group node and connect them (red arrow 2). Now select the Folder list node (red arrow 3) and connect it to the group nodes (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step6/</guid>
      <description>Observer the cache (red arrow 1). The outcome is the same as it was after executing the individual nodes (red line 2).</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step6/</guid>
      <description>The newly added template (red arrow 1) will now appear in the pipeline area (red arrow 2).
Now it can be connected to other nodes, as any regular node.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step6/</guid>
      <description>Repeat the process (red arrow 1) thus adding a second parameter set.
Select the 2nd entry (red arrow 2) and edit it (red arrow 3). Choose the next method (Huang) (red arrow 4) to change the entry to this value.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/ui/image-viewer-1/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/image-viewer-1/step6/</guid>
      <description>The created ROIs can be exported directly to ImageJ (red arrow 1), imported from ImageJ’s ROI Manager (red arrow 2), and the results can be plotted (red arrow 3))</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-single-compartment/step6/</guid>
      <description>You can move the output node lower in the GUII and use the white space (outlined here in red for visualization purposes) to position the actual JIPipe nodes.</description>
    </item>
    
    <item>
      <title>Step 6</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step6/</guid>
      <description>For example, the Analysis compartment will contain its own output node, as well as the output node from the Preprocessing compartment.</description>
    </item>
    
    <item>
      <title>Downloading: Step 3</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/download3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/download3/</guid>
      <description>You will now have two options that determine where the loaded templates will be stored:
Global storage: the newly imported templates will be available in whole JIPipe (all projects) Project storage: the templates will be directly stored inside the project and thus only available within the project itself Choose the option that is most convenient for you.
You can also move templates from/to global store into/from project storage via the Manage menu.</description>
    </item>
    
    <item>
      <title>Running/caching nodes: Step 1</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/caching1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/caching1/</guid>
      <description>To run a specific node or compartment, click the button that is located on the node. Afterwards, select one of the options:
Update cache will run the pipeline up to the selected node and store only the results of the selected node Cache intermediate results will run the pipeline up to the selected node, but also store all results of all predecessors Choose the option that is most convenient for you.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/advanced/imagej-macros/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/advanced/imagej-macros/step7/</guid>
      <description>The quality of the segmentation can be observed by adding a visualization node as shown before (red arrow 1), where the cache entry (red arrow 2) indicates a good match between the raw image and the segmentation when observed in a viewer (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step7/</guid>
      <description>The result will be shown on the right side, under the Cache browser tab (red arrow 1), where the newly loaded file name and full path will be listed (red arrow 2)
The cache stores the results of a pipeline/node in memory. Please note that to work with large images, you require a computer with sufficient RAM space.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step7/</guid>
      <description>Add the new node next to the Annotate with image properties (red arrow 1) node and connect them (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-2/step7/</guid>
      <description>If we choose the 1-channel output slot, e.g. (red arrow 1), we will only see the content of this output slot (red arrow 2), which comes from the blobs image (red arrow 3).
👉 Via such Split &amp;amp; filter by annotation nodes we can separate the analysis of various image types without having to write a full pipeline for each type of image. Moreover, we can add all the folders that need to be analyzed into the workflow, and do the separation of the various images later, based on annotations.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step7/</guid>
      <description>Run the Merge annotations node with Update cache and observe that the raw input image was annotated with information generated at a later step.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step7/</guid>
      <description>The entire project-wide cache can be viewed and managed via the Tools menu (red arrow 1), using the Cache browser option (red arrow 2).
So far, we only used the Cache browser tab that is associated to a specific node. The global Cache browser option is useful for browsing through all data that has been cached.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step7/</guid>
      <description>Another Import/Export option (red arrow 1) is saving a ZIP file (red arrow 2) of the entire dataset (red arrow 3).
The generated ZIP file (or directory if the other option is chosen) will contain the displayed table, including its metadata and data in a standardized JIPipe format.
While the format can be browsed by humans, it is mainly designed for reading via a program. The export of data into a format more suitable for humans will be handled in a later tutorial.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step7/</guid>
      <description>Connect the corresponding outputs from the two nodes above (red arrows 1-4).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step7/</guid>
      <description>Run the Auto threshold 2D node (red arrow 1) and observe the Cache browser (red arrow 2), where the thresholded image is now shown (red arrow 3). After double-clicking the cache entry (red arrow 3), the image viewer (red arrow 4) allows to display the binary image.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step7/</guid>
      <description>We begin with the Export data node. It encapsulates the same functionality as the cache browser&amp;rsquo;s data exporter.
Here we will export the AVG density table into a directory ExampleExports/ViaNodes relative to the project file. Begin by selecting the node and changing the following parameters:
Output directory to ExampleExports/ViaNodes (red arrow 1) Enable Output relative to project directory. If this is not done, the files will be stored in a temporary directory (red arrow 2) Output relative to project directory only works if you loaded the project from a *.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step7/</guid>
      <description>The Cache browser on the right (red arrow 1) will now show the image after having been read into the project</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step7/</guid>
      <description>The Cache browser on the right (red arrow 1) will now show the image after having been read into the project</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step7/</guid>
      <description>Select the Set LUT (color map) node (red arrow 1) and go to the Parameters tab (red arrow 2). Proceed to and activate the Color map field (red arrow 3).
In the Select value window (red arrow 4), chose the desired look-up table, e.g. Viridis (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step7/</guid>
      <description>Plot the Mean values vs. the Area using the Table’s plot function, as shown in a tutorial before.
The red arrows show the settings that were changed from the default values view the plot window.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step7/</guid>
      <description>Look for a node to now resolve the subfolder structure by utilizing the matching nodes search tool (red arrow 1), and use a search term for subfolders (red arrow 2).
The list will start with the node that we need (red arrow 3); observe that the node is a Create option (red arrow 4); if there were existing nodes of the same type in the pipeline, they would also show up in this search list.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step7/</guid>
      <description>We can now read in the images. Look for compatible nodes to continue the pipeline (red arrow 1) and notice that the second hit is already what we need, even without searching with a keyword (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/node-parameters/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/node-parameters/step7/</guid>
      <description>&amp;hellip; to have the images saved in ImageJ and compare them</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step7/</guid>
      <description>In the table viewer (red arrow 1) it is also possible to plot column content. Click on the Plot button (red arrow 2) and choose e.g., the Histogram option (red arrow 3) .</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step7/</guid>
      <description>Look for Table processing nodes in the Tables menu (red arrow 1) and select the node Apply expression per row (red arrow 2).
Connect the node to the Measurements output of the Simple blob finder.
The Apply expression per row node applies a custom mathematical expression for each row of the input table. The result of the expression is written into a new or existing column of the same row.</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step7/</guid>
      <description>This task will be carried out by adding a Filter ROI by statistics node (red arrow 1), connecting it to the ROI output of the Cellpose (2.x) node (red arrow 2), and setting the roundness threshold to 0.7 (red arrow 3):
Round &amp;gt; 0.7 </description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step7/</guid>
      <description>Use the slot editing capabilities of Split data randomly (percentage) to create the following output slots of type Image:
Train Validate Test Then configure the percentages in the Parameters tab and the Weights category (red rectangle 1) as following:
Train set to 80 Validate set to 10 Test set to 10 </description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step7/</guid>
      <description>Run the Split channels node (red arrows 1 and 2).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step7/</guid>
      <description>However, the nodes inside the group do not have their cache saved! When examining the group tab, the content reveals a node for the group input (red arrow 1), the group output (red arrow 2), but selecting the Import image node, e.g., (red arrow 3) will not find a Cache tab (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step7/</guid>
      <description>If the template node needs to be modified, the updated node must to be saved again as a template.
When using the same name for saving, it is best to delete the outdated node from the list first. This can be done by selecting the outdated node from the list (red arrow 1), right-click on the node and select the Delete option (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step7/</guid>
      <description>If you want more entries, repeat the process until all the desired thresholding methods are n the parameters list (red rectangle 1).
Alternatively, you can let the editor generate all values automatically:
Select one value of the column (note: there must be at least one parameter set) Navigate to Generate and choose a generator (for the Method parameter there is only one) </description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/ui/image-viewer-1/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/image-viewer-1/step7/</guid>
      <description>Exporting the content of the image viewer is possible by clicking on the photo button (red arrow 1), and selecting the saving of the displayed image in a TIFF format (red arrow 3), or as-displayed (red arrow 2) in a PNG/JPEG/BMP format (red arrow 4), or by placing it in the system memory for copy-pasting into an image editor (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 7</title>
      <link>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/ui/project-new-three-compartments/step7/</guid>
      <description>The output node can be moved lower in the GUII and use the white space (outlined here in red for visualization purposes) to position the actual JIPipe nodes.</description>
    </item>
    
    <item>
      <title>Downloading: Step 4</title>
      <link>https://www.jipipe.org/examples/how-to-import-node-templates/download4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-import-node-templates/download4/</guid>
      <description>In this example, the option Project storage was chosen.
You can now see the newly added templates and use them by dragging them into the pipeline.</description>
    </item>
    
    <item>
      <title>Running/caching nodes: Step 2</title>
      <link>https://www.jipipe.org/examples/how-to-load-projects/caching2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/examples/how-to-load-projects/caching2/</guid>
      <description>You now can browse through the generated results.
Double-click items to open them in JIPipe or ImageJ (depending on the data type).
If you want more information about the cache browser, please visit the tutorials.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step8/</guid>
      <description>By double-clicking on the cache entry row (red arrow 1), the newly loaded image will be opened in a dedicated viewer (red arrow 2)
The File node packages the file path into a JIPipe-managed object called File. If you double-click a File/Folder/Path, it will be opened using your system&amp;rsquo;s standard behavior.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step8/</guid>
      <description>Go to the Parameters tab and examine the filter expression in the category Filters (red arrow 1).
The figure shows an expression (by default the expression is empty)
TO_NUMBER($&amp;#34;Image composite channel count&amp;#34;) == 3 This text is called an expression and determines the filter conditions that determine wether an input data item is pass through the output.
In the following steps, we will briefly explain the functionality behind the expression.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step8/</guid>
      <description>Now let&amp;rsquo;s assume that we do not need Threshold and MeanIntensity again. These can be removed via dedicated nodes.
Add a node Remove annotation and configure its Removed annotations parameter as following:
key == &amp;#34;Threshold&amp;#34; OR key == &amp;#34;MeanIntensity&amp;#34; This will remove all annotations that either have the name/key Threshold or MeanIntensity.
Remove annotation executes the expression for each annotation to determine if it should be deleted.
You can also remove annotations by their value or implement even more complex filter expressions.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-1/step8/</guid>
      <description>The cache browser will open in a new tab of the UI (red arrow 1), where the hierarchy of compartments, nodes, and outputs (red arrow 2 and 3) will appear on the left side. For example, you might also find the outputs of the Processing compartment (red arrow 4).
The cache content appears on the right side of the UI, containing all the results arranged in columns (red rectangle 4).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step8/</guid>
      <description>The Import/Export menu (red arrow 1) also allows the importing/exporting of the entire cache of the selected node (red arrow 2) to a selected/created directory (red arrow 3).
The difference between exporting the current table (as indicated by the Table label) and the whole node cache is that the full-cache options store all outputs of the node, while the Table-functions exclude all non-selected outputs.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step8/</guid>
      <description>Now the Preprocessing compartment will emit these images as output.
The connection to the Processing compartment will absorb these images as Input. This can be observed by double-clicking on the Processing compartment (red arrow 1) in the Compartments tab (red arrow 2), to reveal the content inside the compartment node (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step8/</guid>
      <description>The result is adequate, and it can be linked to the Processing compartment output.
Locate the Processing output node and move it close to the thresholding node (red arrow 1).
Add a new input slot to the output node (red arrow 2) by searching for image in the search bar (red arrow 3) and selecting the general Image type (red arrow 4). Name the slot Binary 1-channel or any other name of your liking (red arrow 5) and add it to the node (red arrow 6).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step8/</guid>
      <description>Run the Export data node via Update cache.
Now navigate to the ExampleExports/ViaNodes directory that should have appeared next to the project file. It contains a file density_blobs.csv according to the pattern defined by the File name expression:
&amp;quot;density_&amp;quot; plus #Filename, where #Filename is blobs, because the table was annotated with the original filename (blobs)</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-1/step8/</guid>
      <description>As described before, double-clicking on the cache element (red arrow 1) will open it in a viewer (red arrow 2)
Basic information about the image (resolution, bit depth, etc.) can be found in the toolbar of the image viewer and within the &amp;ldquo;String representation&amp;rdquo; column in the cache browser.
The operations for File and Import image are different nodes, so you have the possibility to apply additional file manipulation operations (e.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/finding-connecting-nodes-2/step8/</guid>
      <description>As described before, double-clicking on the cache element (red arrow 1) will open it in a viewer (red arrow 2)
Basic information about the image (resolution, bit depth, etc.) can be found in the toolbar of the image viewer and within the &amp;ldquo;String representation&amp;rdquo; column in the cache browser.
The operations for File and Import image are different nodes, so you have the possibility to apply additional file manipulation operations (e.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step8/</guid>
      <description>To change the pixel size and other physical dimensions of an image, search for nodes with the keyword physical (red arrow 1). Select the Set physical dimensions node (red arrow 2).
The Set physical dimensions allows to set the physical dimensions of the image pixels via parameters. Alternative nodes can set these values from annotations or via expressions.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step8/</guid>
      <description>From this plot it appears that areas below 150 and above 700 are rare. We can ignore these values by filtering the ROIs.
Look for such node via the top menu and navigate to ROI (red arrow 1), then Filter (red arrow 2), and choose Filter ROI by statistics (red arrow 3).
Filter ROI by statistics allows to filter a ROI list via custom mathematical expressions. ImageJ measurements and annotations are both available.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step8/</guid>
      <description>Run the new node (red arrow 1) and observe the cache (red arrow 2). Notice that the cache only indicates two subfolders (red arrows 3 and 4), whereas the data2 subfolder should have two of its own subfolders (check this in the downloaded data folder in the file system).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step8/</guid>
      <description>Add the node (red arrow 1) and run it (red arrow 2). In the cache (red arrow 3) we can now observe all the images (red line 4).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step8/</guid>
      <description>Go to the Series tab (red arrow 1) to select the source data. The name of the data series can be set (red arrow 2). Select e.g., the Area column (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step8/</guid>
      <description>Before editing the table, find out the names of the measured parameters:
open the Measurements cache results of the Basic blob finder (red arrow 1), double-click on the cache entry (rectangle 2) and review the column names in the table viewer (rectangle 3).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step8/</guid>
      <description>We will now shape the identified droplet ROI by converting the ROIs to a mask (red arrow 1) by applying a Morphological operation 2D (red arrow 2) to open the object (red arrow 3) with a Radius of 10 px (red arrow 4), using a Disk-shaped kernel (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step8/</guid>
      <description>The Cellpose training (2.x) node is then added (red arrow 1) and connected to the training (red arrow 2) and validation (red arrow 3) output of the Split data randomly (percentage) node.
The number of training epochs (red arrow 4) and the mean diameter of the object that we seek (red arrow 5) are the most important setting here.
Make sure to activate the GPU if the PC has one (red arrow 6 and 7) to expedite the learning process.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step8/</guid>
      <description>Observer the cache (red arrow 1). The outcome is the same as it was after executing the individual nodes (red line 2).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-2/step8/</guid>
      <description>Consequently, Groups should only be generated, when the selection of nodes that will be unified into a group have already been tested and debugged thoroughly!
Should changing and testing the individual nodes of a group become necessary, the member nodes of the group have to be copied into the main pipeline (red line 1) and tested there the traditional way.</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step8/</guid>
      <description>The template node(s) can be exported and imported between projects, or between various JIPipe instances; this way the nodes can be shared easy, e.g. during teaching sessions.
As an example, select two nodes from the list (red arrow 1 and 2), click on the Manage button (red arrow 3) and select Export selection to file (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 8</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step8/</guid>
      <description>Choose the parameter values that should be added as new parameter set.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step9/</guid>
      <description>To save the project, go to the Project tab (red arrow 1) and select the saving mode, e.g. Save As (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step9/</guid>
      <description>Let’s examine how this expression was arrived at. The parameter that we need to filter for is the channel number.
The exact name can be read out from the Annotate by image properties node (red arrow 1).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-3/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-3/step9/</guid>
      <description>Run the Remove annotation node with Update cache. The unwanted columns are now removed.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step9/</guid>
      <description>The exported cache contains a machine-readable and heavily structured design of all results, which can be navigated to automatically by following the pop-up link (red arrow 1).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-1/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-1/step9/</guid>
      <description>The nodes inside the Processing compartment contain the output node from Preprocessing (red arrow 1), and the output node of the Processing compartment (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/compartments-2/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/compartments-2/step9/</guid>
      <description>The new input slot is now available on the output node (red arrow 1). Connect it to the output slot of the thresholding node to expose the binary image as output of this node.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step9/</guid>
      <description>Select the Export image node and navigate to its parameters. Unlike the generic data exporter Export data, it allows you to change the output type of the generated file from TIFF to PNG or other formats.
Again, set the Output directory to ExampleExports/ViaNodes with Output relative to project directory enabled.
The filename expression set to
&amp;#34;overlay_&amp;#34; + #Filename This would yield a file that is for example named overlay_blobs.png.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step9/</guid>
      <description>Drag the new node to the UI (red arrow 1) and connect it to, e.g., the Green channel of the Split channels node (red arrow 2).
In the Parameters menu (red arrow 3), enable the physical dimensions that need to be changed (red arrows 4, 5).
From the drop-down list (red arrow 6) choose the proper dimensions (red arrows 7, 8). The values can be entered in the neighboring fields (red arrows 9, 10).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step9/</guid>
      <description>Add the node to the UI (red arrow 1) and connect it to the ROI output slot of Find particles (red arrow 2), and to the 1-channel output slot of the Preprocessing output node (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step9/</guid>
      <description>To fix this issue, go back to the Parameters tab (red arrow 1) of the node and activate the checkbox Recursive (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-2/step9/</guid>
      <description>Double click on one of the images (red arrow 1) to observe it in a separate viewer window (red arrow 2)</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step9/</guid>
      <description>The resulting histogram will appear, according to the default settings of its appearance.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step9/</guid>
      <description>Let us calculate the ratio between the mean value and the area.
Select the Apply expression per row node (red arrow 1), open the Parameters tab and apply the following changes:
In parameter Expressions set the value of Expression to Mean / Area.
Mean and Area reference the mean and area column values of the currently processed row. Always keep in mind that the Expression is applied per row.
In parameter Expressions set the value of Column name to Density.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step9/</guid>
      <description>The next Morphological operation 2D (red arrow 1) will implement an erosion (red arrow 2) with a 1-pixel (red arrow 3) disk kernel (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step9/</guid>
      <description>The trained model can be saved from the cache browser (see Tutorial), and it can be used directly to visualize the segmentation quality using the test dataset.
For the latter, use the output model of the training node (red arrow 1) to guide a Cellpose (2.x) node (red arrow 2) via connecting the newly trained model to the corresponding input of the Cellpose (2.x) node (red arrow 3).
The data input of the Cellpose (2.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-groups-1/step9/</guid>
      <description>After having run the Split channels node (red arrow 1), observing the cache will show the resulting three channels (red line 2).</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step9/</guid>
      <description>In the Export templates dialog (red arrow 1) navigate to the target folder (red arrow 2) and choose a name for the exported file (red arrow 3). The saved file is in JSON format (red arrow 4).
In this case, the saved templates will be found in the tutorial’s folder that can be explored after download.</description>
    </item>
    
    <item>
      <title>Step 9</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step9/</guid>
      <description>Notice how now all thresholding options are setup.</description>
    </item>
    
    <item>
      <title>Data table</title>
      <link>https://www.jipipe.org/documentation-data-api/data-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-data-api/data-table/</guid>
      <description>The data table structure is the smallest unit of the data API. Its purpose is to organize data of any supported kind into an annotated table and store all required metadata to recover the data from the file system.
A data table is located in a directory within the file system and contains following parts:
Element Description data-table.json Metadata file for this data table. &amp;lt;data row index&amp;gt; Stores the main data for this row.</description>
    </item>
    
    <item>
      <title>Displaying data</title>
      <link>https://www.jipipe.org/documentation-java-api/data-type/result-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/data-type/result-ui/</guid>
      <description>After processing, users should be able to continue processing the data from within JIPipe. The data instances are cleared from memory after processing, meaning that the data needs to be loaded from its output folder after processing.
An user interface is shown when a user select a row in the results table. There are two ways to modify the user interface:
Registering additional operations that will be available to users (recommended) Replacing the interface with a custom one Adding custom operations JIPipe already comes with some default operations, including as opening the containing folder.</description>
    </item>
    
    <item>
      <title>Graph compartments</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/compartments1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/compartments1/</guid>
      <description>In many lectures it is common to teach that image analysis tasks can be divided into a steps, for example Preprocessing, Analysis, and Postprocessing.
JIPipe facilitates this concept by its graph compartment feature that can be accessed via the Compartments tab (red arrow 1). The compartment function separates the pipeline into units that can be connected to each other to enforce a specific order of operations (red arrow 2).
👉 Related tutorial: Compartments I (Creating and connecting) Learn how to create and use compartments.</description>
    </item>
    
    <item>
      <title>Graph node</title>
      <link>https://www.jipipe.org/documentation-json-api/graph-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/graph-node/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: algorithm-node.schema.json
Node in a graphjipipe:slot-configuration:object[object Object]User-defined slots. Might be ignored depending on the algorithm. The keys are the slot names.See slot-definitionjipipe:node-ui-location:object[object Object]Locations of this node within the UI. Optional. The keys depend on the UI implementation.See pointjipipe:node-info-id:stringAlgorithm type IDjipipe:graph-compartment:stringCompartment UUID.</description>
    </item>
    
    <item>
      <title>Handling multiple inputs</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/iterating-algorithms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/iterating-algorithms/</guid>
      <description>JIPipe data slots store multiple data rows. This means that algorithms have to iterate their workload for each input row and generate equivalent output in the respective output slots.
There can be issues if data from multiple input slots need to be combined (e.g. merge channels into RGB, see user documentation). JIPipeAlgorithm has no capabilities to help with such cases.
A solution can be JIPipeIteratingAlgorithm or JIPipeSimpleIteratingAlgorithm that use the annotation attached during processing to find data rows that belong to the same data set.</description>
    </item>
    
    <item>
      <title>Image analysis pipeline</title>
      <link>https://www.jipipe.org/tutorials/old/analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/old/analysis/</guid>
      <description>This tutorial is also available as video.1. First startOn starting JIPipe, you will see such a screen: It contains a short introduction, the graph compartment editor,an three pre-defined graph compartments Preprocessing, Analysis, and Postprocessing. As described in the graph compartment documentation, youcan ignore graph graph compartments. But in this tutorial we will make use of its capabilities to clearly separate the pipeline into the mentioned tree steps.</description>
    </item>
    
    <item>
      <title>ImageJ Dependencies</title>
      <link>https://www.jipipe.org/installation/dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/installation/dependencies/</guid>
      <description>JIPipe has various dependencies in form of ImageJ update sites that are not always provided via the Fiji update site or the ZIP package. During the startup of the software, JIPipe will automatically check for the appropriate ImageJ update sites and will guide you through the installation of all necessary libraries.
The dependency installation was revised in JIPipe version 1.74.0. Please follow the appropriate procedures in the tutorial below.
JIPipe 1.</description>
    </item>
    
    <item>
      <title>JavaDocs</title>
      <link>https://www.jipipe.org/documentation-java-api/javadocs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/javadocs/</guid>
      <description>The JavaDocs of the Java API can also be found here</description>
    </item>
    
    <item>
      <title>Pipeline editor</title>
      <link>https://www.jipipe.org/documentation/create-pipelines/pipeline-editor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/create-pipelines/pipeline-editor/</guid>
      <description>This guide is also available as video tutorial. The graph editor (pipeline editor) allows you to edit the processing steps of a graph compartment. Its user interface is separated into three sections:
The analysis graph contains the processing steps (also referred as algorithms) The settings panel shows the properties of the currently selected algorithms The toolbar allows you to add more algorithms into the graph, navigate to existing algorithms, change some behavior settings of the graph editor, and create screenshots Analysis graph The analysis graph contains algorithms that are represented by rectangles.</description>
    </item>
    
    <item>
      <title>Python API</title>
      <link>https://www.jipipe.org/documentation/standard-library/python/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/python/api/</guid>
      <description>jipipe jipipe.data_slot This file provides functions that are used to manage the contents of a data slot
Zoltán Cseresnyés, Ruman Gerst
Research Group Applied Systems Biology - Head: Prof. Dr. Marc Thilo Figge https://www.leibniz-hki.de/en/applied-systems-biology.html HKI-Center for Systems Biology of Infection Leibniz Institute for Natural Product Research and Infection Biology - Hans Knöll Institute (HKI) Adolf-Reichwein-Straße 23, 07745 Jena, Germany
The project code is licensed under BSD 2-Clause. See the LICENSE file provided with the code for the full license.</description>
    </item>
    
    <item>
      <title>Running the whole pipeline</title>
      <link>https://www.jipipe.org/documentation/run-pipelines/run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/run-pipelines/run/</guid>
      <description>JIPipe stores its results in a user-defined output folder. After clicking Run (located at the top right corner of a project window) JIPipe will query the output folder from you. You can also generate a random folder that will be located on your operating system&amp;rsquo;s temporary directory by clicking the button.
After confirming the settings by clicking Run now, JIPipe will start processing the pipeline.
You can have as many runs as you want.</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/adding-nodes-saving/step10/</guid>
      <description>The navigate to the target folder (red arrow 1) and select or choose a file name (red arrow 2). The JIPipe project filenames end with the “.jip” extension.</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step10/</guid>
      <description>We use this value for filtering in an expression, where we look for channel numbers equaling 3.
The figure now shows the default configuration of the Split &amp;amp; filter by annotations node that can be opened by selecting the node (red arrow 1) and going to the Parameters tab.
Please observe the examples that are provided in the description field (red arrow 2) and in the expression field (red arrow 3):</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step10/</guid>
      <description>Under the folder name (red arrow 1), the groups of results are listed (red arrow 2-4), as they appeared in the cache. Inside each of the entries, data-table.csv and data-table.json files (red arrow 5) explains the content of the data subfolders, and contains the metadata.
Only the data-table.json file is relevant for importing metadata. The data-table.csv table is generated for the sake of convenience.</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step10/</guid>
      <description>Move on to the Export table as XLSX node. While Export data will always export CSV files, this node will instead Excel files. It can even be configured to export multiple tables into one XLSX file.
Again, set the Output directory to ExampleExports/ViaNodes with Output relative to project directory enabled.
The filename expression set to
&amp;#34;measurements_&amp;#34; + #Filename This would yield a file that is for example named measurements_blobs.xlsx.</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-physical-dimensions/step10/</guid>
      <description>Read out the physical dimensions of the newly calibrated image by adding a node Annotate with image properties (red arrow 1) and connecting it to the output of Set physical dimensions.
Run the node and observe the Cache browser (red arrow 2). Now both the X and Y dimensions are added to the annotations table (red arrows 3 and 4).</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step10/</guid>
      <description>Go to the Parameters tab of the Filter ROI by statistics node (red arrow 1) and use the expression editor (red arrow 2) as shown before to create the filtering formula (red arrow 3):
Area &amp;gt; 150 AND Area &amp;lt; 700 Here you do not need to write TO_NUMBER(Area), as the values are already numeric to begin with. Unlike text-based annotations that come from JIPipe&amp;rsquo;s data management functions, Filter ROI by statistics extracts its values from ImageJ tables that support numbers.</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step10/</guid>
      <description>Run the node and observe that now we have all 4 subfolders listed, together with the main folder (red line 1).</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step10/</guid>
      <description>To change the appearance of plots, go to the Settings tab (red arrow 1), where the plot type can be changed (red arrow 2), together with many parameters (red arrow 3) as shown in the red rectangle 4.
These include, e.g., color schemes (red arrow 5), titles and labels (red arrow 6), font sizes and typefaces (red arrow 7), etc.
Experiment with these parameters!</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step10/</guid>
      <description>Run the node (red arrow 1) and observe the Cache browser (red arrow 2).
The cache entry (red arrow 3) now contains a new Density column (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step10/</guid>
      <description>The last three nodes will convert the mask back to ROIs (red arrow 1), split them in case more than one full droplet is found (red arrow 2), and show the quality of the segmentation by overlaying the ROIs with the image (red arrow 3).
Mask to ROI is basically the ImageJ particle finder without the measurements output and filtering settings.
Split multi-component ROI splits ImageJ ROI that consist of multiple components into their individual basic shapes.</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step10/</guid>
      <description>In order to utilize a saved model drag the Cellpose model file (a file with a very long name) into JIPipe. This will create a File list node as usual.
Alternatively, you can also create a File list node manually and use the file browser to select the Cellpose mode (red arrows).
Cellpose model files look for example like this: &amp;ldquo;cellpose_residual_on_style_on_concatenation_off_training_2022_10_04_17_53_41.794691&amp;rdquo;
We do not recommend to rename them, as Cellpose might look for vital information in the file name and will fail to load the model if the information is missing.</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/create-node-templates-1/step10/</guid>
      <description>Importing a template JSON file is done similarly: in the Manage menu, choose Import from file (red arrow 1).</description>
    </item>
    
    <item>
      <title>Step 10</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step10/</guid>
      <description>With the parameter sets now configured, select the Auto threshold 2D node.
Now select the Advanced parameters tab and enable the multiple parameters mode (red arrow 2).
By default, the multi-parameter mode will automatically attach all externally set parameters to the generated data. The name of the annotation is automatically generated, but can be prefixed with a custom string by the setting Parameter annotation prefix (red arrow 4).
You can leave the Parameter annotation prefix empty.</description>
    </item>
    
    <item>
      <title>Visual programming</title>
      <link>https://www.jipipe.org/documentation/basic-concepts/visual-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/basic-concepts/visual-programming/</guid>
      <description>If you are familiar with ImageJ, you already know how processing is applied in this software: All operations are directly applied after selecting them in the graphical user interface (GUI). For example, a simple analysis protocol would consist of opening the image via File &amp;gt; Open, applying a Gaussian Blur filter, and then thresholding the image via Otsu&amp;rsquo;s method.
This allows to easily develop image analysis protocols that can be manually adjusted if needed.</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step11/</guid>
      <description>To simplify the creation of expressions, JIPipe includes an expression editor component that shows all available functions and validates the code.
Open the expression editor by clicking the Edit f(x) button (red arrow 1) that opens a new window (red arrow 2).
But before we proceed, we need to establish some fundamentals on how the annotation system and the splitter work:
The Split &amp;amp; filter by annotation node iterates through each individual input data item and executes the user-provided expression where variables are set to the column value in the data table (the one you can review in the cache browser).</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step11/</guid>
      <description>The numbered subfolder will contain the actual cached data of the 1-channel measurements output (red arrow 1) in a *.csv file (red arrow 2).
The numeric folders are standardized. In JIPipe, navigate to Help &amp;gt; Data type compendium to review the exact specifications of the directory contents.</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step11/</guid>
      <description>Finally, edit the parameters of Export ROI node. Export data will export a *.roi file if only one ROI is present and otherwise compress all ROIs into a *.zip file. This node can optionally turn off this export behavior and export all ROIs into an individual *.roi file.
Again, set the Output directory to ExampleExports/ViaNodes with Output relative to project directory enabled.
The filename expression set to
&amp;#34;rois_&amp;#34; + #Filename This would yield a file that is for example named rois_blobs.</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step11/</guid>
      <description>Run the node and observe the lower number of ROIs (red arrow 1, note 2).</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step11/</guid>
      <description>Now we need to annotate the images with the subfolder names. Add a new annotation node by looking for compatible nodes (red arrow 1) using the annotate keyword (red arrow 2). Be careful to choose the Create node option (red arrow 3) from the list, rather than the navigate option (red arrow 4). The latter choice can be used to easily navigate to an already created node, which is especially useful when navigating a complex pipeline (note 5)</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step11/</guid>
      <description>It is always good practice to output the final results of a compartment into the compartment output.
Add a new input slot to the compartment output node for the ROI list (red arrow 1) by searching for roi (red arrow 2) and selecting the ROI list data type (red arrow 3).
Name the new slot (red arrow 4) and add it to the node (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step11/</guid>
      <description>We will proceed to generate an integrated table.
From the Tables menu (red arrow 1), add the node Integrate table columns (red arrow 2).
Integrate table columns allows to apply pre-defined integration methods (sum, min, max, mean, first or last row, &amp;hellip;) to a customizable set of table columns. The result will be a table with one row.
If you want to write a custom integration function, use Apply expression to columns that utilizes mathematical expressions.</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-1/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-1/step11/</guid>
      <description>Here the Image input slot (red arrow 2) of the Convert ROI to RGB node (red arrow 1) is connected to the Image output of the Import images node (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step11/</guid>
      <description>Run the node (red arrow 1) and observe the Cache browser (red arrow 2). The segmented peroxisomes are now illustrated by the selected outputs of the Cellpose (2.x) node, e.g., in this example, we set Labels, ROI, Probabilities and XY flows as outputs (red rectangle), and selected Probabilities to be displayed (red arrow 3).
You might have noticed the Label data annotation in the list. You can remove them after the training step via the Remove data annotations node.</description>
    </item>
    
    <item>
      <title>Step 11</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step11/</guid>
      <description>This action opens a new input slot Parameters on the threshold node (red arrow 1), which can be connected to the Define multiple parameters node (red arrow 2).</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step12/</guid>
      <description>Begin by deleting the existing example expression. The expression will now be
We will now use the function builder component of the expression editor to convert the annotation value of Image composite channel count to a number that can be tested to be equal to 3:
Use the search field to look for functions that work with numbers by using the search word number (red arrow 1), which will yield a function TO_NUMBER (red arrow 3).</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/basic/cache-2/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/cache-2/step12/</guid>
      <description>This file contains the cached results (red arrow 1), as observed in a spreadsheet viewer.
The results are organized in a columnar matter (red rectangle 2).</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/basic/exporting-data-2/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/exporting-data-2/step12/</guid>
      <description>Run all the exporter nodes via Update cache and navigate into the ExampleExports/ViaNodes/ directory.
Observe the generated files.</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step12/</guid>
      <description>We now plot the selected ROIs in an overlay image with the original 1-channel data. Browse the ROI menu (red arrow 1) to look for Convert functions (red arrow 2), and select the Convert ROI to RGB function (red arrow 3).
Convert ROI to RGB visualizes ROI on top of an image. It is JIPipe&amp;rsquo;s equivalent of the ImageJ ROI Manager&amp;rsquo;s visualization feature.</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/importing-multiple-images-1/step12/</guid>
      <description>Run the new node (red arrow 1) and observe the cache (red arrow 2). Note that now the subfolder names are also remembered (red arrow 3), and that the parent name (red arrow 4) reflects the folder directly above the current subfolder (red arrow 5).
For the subfolder name (red arrow 3), we changed the default name as shown above for the previous annotation node.</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/basic/quantification-plotting/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/quantification-plotting/step12/</guid>
      <description>Add another input slot for Measurements (use the search word “results” to find the Results table data type) (red arrow 1).
Connect all three slots to the corresponding output slots (red arrows 2 to 4).
This completes this workflow.</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step12/</guid>
      <description>Select the Integrate table columns (red arrow 1) and edit the Processors parameters in the Parameters tab (red arrow 2):
Set the Input column to the following value:
&amp;#34;Density&amp;#34; If you reference existing columns, always put the name in quotation marks. The function for selecting columns can be heavily customized, as it is expression-based an can under certain circumstances yield unexpected results if the name is typed in as is.</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/features/cellpose-2/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/cellpose-2/step12/</guid>
      <description>To check the quality of the segmentation results visually, add a Convert ROI to RGB node to the UI (red arrow 1), connect it to the ROI output of the Cellpose (2.x) node (red arrow 2) and to the Test dataset (red arrow 3) of the Split data randomly (Percentage) node.
Observe the output in a viewer (red arrow 4) and notice the high quality of the segmentation (yellow circles outlining the peroxisomes).</description>
    </item>
    
    <item>
      <title>Step 12</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step12/</guid>
      <description>Run the threshold node (red arrow 1) and observe that the cache now contains as many images as the number of selected threshold methods (red rectangle 2).
The name of the method and the threshold value also appear as annotations (red rectangle 3).
Here it is named &amp;ldquo;MethodMethod&amp;rdquo;, because we set the prefix to &amp;ldquo;Method&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Step 13</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step13/</guid>
      <description>Select the filter node (red arrow 1) and observe the Output field in the Parameters tab (red arrow 2); It now contains the filtering expression.</description>
    </item>
    
    <item>
      <title>Step 13</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step13/</guid>
      <description>Add the node to the UI (red arrow 1), connect it to the filtered ROI list (red arrow 2) and to the 1-channel image (red arrow 3).
Run the node and observe the cache entry (red arrow 4) and the full image in a viewer (red arrow 5). The exclusion of the very small and very large ROIs can be observed.</description>
    </item>
    
    <item>
      <title>Step 13</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step13/</guid>
      <description>Run the node (red arrow 1) and observe the Cache (red arrow 2).
The new cache entry (red arrow 3) now contains the new column AVG density (red arrow 4, red rectangle 5).
If you want to annotate data (an image, table, etc.) by the AVG density, use the node Annotate data with table values.
Its Generated annotation parameter allows to generate an annotation from value(s) obtained from a table and attach it to the input of the Data slot.</description>
    </item>
    
    <item>
      <title>Step 13</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step13/</guid>
      <description>Let&amp;rsquo;s proceed by generating multiple parameters for the Gaussian blur.
The addition of number-type multiple parameters works very similarly.
Add another node Define multiple parameters (red arrow 1) which will be used with the Gaussian Blur 2D, controlling the Sigma (X) parameter.
Add a whole row (red arrow 2), import from a node (red arrow 3), select the Gaussian Blur 2D entry (red arrow 4) and choose Sigma (X) (red arrow 5).</description>
    </item>
    
    <item>
      <title>Step 14</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step14/</guid>
      <description>Run the node (red arrow 1) and observe the Cache, where the 3-channel image will appear (red line 2), indicating that the filter worked, allowing the three-channel image through.</description>
    </item>
    
    <item>
      <title>Step 14</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step14/</guid>
      <description>Select the image statistics node (red arrow 1) and duplicate it (red arrow 2). This menu is accessible via right-clicking on the middle green area of the node.</description>
    </item>
    
    <item>
      <title>Step 14</title>
      <link>https://www.jipipe.org/tutorials/basic/table-processing/step14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/table-processing/step14/</guid>
      <description>Finally, add three input nodes to the compartment’s output node and connect them accordingly. (red arrows 1-3).</description>
    </item>
    
    <item>
      <title>Step 14</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step14/</guid>
      <description>Add more values (red arrow 1), edit their values (red arrow 2) b y setting the desired sigmas (red arrow 3), which will appear in the list (red arrow 4, red rectangle).
A generator for numeric values is also available in Generate.</description>
    </item>
    
    <item>
      <title>Basic image analysis pipeline</title>
      <link>https://www.jipipe.org/tutorials/videos/analysis_video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/videos/analysis_video/</guid>
      <description> &amp;lt;1.73.x The video tutorial was designed for older versions of JIPipe. Please be aware that some GUI components have changed. This tutorial is also available as text tutorial.</description>
    </item>
    
    <item>
      <title>Merging input data</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/merging-algorithms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/merging-algorithms/</guid>
      <description>You might need to develop an algorithm that does not simply iterate through its input(s), but organize it into groups to be merged. JIPipe comes with JIPipeMergingAlgorithm that uses the annotation attached during processing to find data rows that belong to the same data set. The implementation creates JIPipeMergingDataBatch instances that represent multiple data rows merged into one group.
Please access data via the data interface.
The only difference to JIPipeAlgorithm is that you need to override a different function called runIteration.</description>
    </item>
    
    <item>
      <title>Parameters</title>
      <link>https://www.jipipe.org/documentation/create-pipelines/parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/create-pipelines/parameters/</guid>
      <description>Table Of Contents Testing multiple parameters Creating parameter sets Interactive parameter designer Generate via expressions Adaptive parameters 1.74.x&amp;#43; Some features are only present in JIPipe version 1.74.0 or newer Many important settings of a node are located within its parameter panel (accessible by selecting the node and going to the Parameters tab). The editor contains the list of all parameters, and a section containing the current documentation that by default shows general information about the node.</description>
    </item>
    
    <item>
      <title>Regarding OMERO</title>
      <link>https://www.jipipe.org/installation/omero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/installation/omero/</guid>
      <description>If you are installing JIPipe via the ImageJ updater site, you might have noticed a directory jars/omero that will be downloaded with the package.
It contains the absolute minimum of files to use OMERO for uploading and downloading images. We cannot guarantee that the JIPipe-provided OMERO libraries are compatible with your server setup or sufficient for any task outside basic image uploading and downloading.
👉 We strongly recommend to install one of the OMERO packages from the ImageJ updater.</description>
    </item>
    
    <item>
      <title>Step 15</title>
      <link>https://www.jipipe.org/tutorials/basic/annotations-1/step15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/annotations-1/step15/</guid>
      <description>Insert the filter node into the pipeline by placing it in between the annotation node and the Split channels function (red arrow 1). Connect the new node to the functions above (red arrow 2) and below (red arrow 3). Make sure that the direct connection between the Annotate node and the Split channels node is removed beforehand.
Run the Split channels node and observe its cache (red arrow 1) to demonstrate that the newly installed filtering function indeed worked (red line 2).</description>
    </item>
    
    <item>
      <title>Step 15</title>
      <link>https://www.jipipe.org/tutorials/basic/image-roi-processing/step15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/basic/image-roi-processing/step15/</guid>
      <description>Connect the duplicated node to the filtered ROI output (red arrow 1) and to the 1-channel image (red arrow 2).
Create two new input nodes on the Processing compartment output node: one for the filtered ROI measurements, and one for the ROI overlay image.
Connect the old output slots (red arrows 1-3), as well as the two new ones to the output node (red arrow 4-5).
Now the statistics are extracted from filtered ROIs.</description>
    </item>
    
    <item>
      <title>Step 15</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step15/</guid>
      <description>In the Gaussian blur 2D node (red arrow 1) enable multiple parameters (red arrow 2), and use the parameter setting (red arrow 3).
Here you can again provide a prefix if you want (red arrow 4).</description>
    </item>
    
    <item>
      <title>Step 16</title>
      <link>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/intermediate/multi-parameters/step16/</guid>
      <description>Connect the new parameter node (red arrow 1) to the Gaussian blur node (red arrow 2). Feel free to adjust the names of the parameter nodes to indicate their target (red rectangles 3 and 4).
Run the nodes and observe that now we have 32 results (a combination of 4 gaussian sigmas and 8 threshold methods). Study the outcome of the Find particles node in terms of how these parameters affect the number of identified ROIs.</description>
    </item>
    
    <item>
      <title>Algorithm type</title>
      <link>https://www.jipipe.org/documentation-json-api/algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/algorithm/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: algorithm.schema.json
Defines a new node typeid:stringUnique algorithm IDmetadata:See metadataGeneral algorithm metadatacategory:stringorg.hkijena.jipipe:miscellaneousThe categoryexported-parameters:object[object Object]List of parameters that will be exported to users of the nodegraph:See graphThis graph is executed when the algorithm is runmenu-path:stringOptional menu path within the category menujipipe:project-type:string, x ∈ {graph-wrapper-algorithm(default)}Identifies the JSON as algorithmExample { &amp;#34;id&amp;#34; : &amp;#34;folder-list-tif&amp;#34;, &amp;#34;metadata&amp;#34; : { &amp;#34;name&amp;#34; : &amp;#34;List TIFF files&amp;#34;, &amp;#34;description&amp;#34; : &amp;#34;Lists all TIFF files in a folder&amp;#34;, &amp;#34;authors&amp;#34; : &amp;#34;Ruman Gerst&amp;#34;, &amp;#34;website&amp;#34; : &amp;#34;&amp;#34;, &amp;#34;license&amp;#34; : &amp;#34;BSD-2&amp;#34;, &amp;#34;citation&amp;#34; : &amp;#34;&amp;#34; }, &amp;#34;category&amp;#34; : &amp;#34;Converter&amp;#34;, &amp;#34;parameter-visibilities&amp;#34; : { &amp;#34;visible-keys&amp;#34; : [ ] }, &amp;#34;graph&amp;#34; : { &amp;#34;nodes&amp;#34; : { &amp;#34;default-preprocessing-filter-files&amp;#34; : { &amp;#34;jipipe:slot-configuration&amp;#34; : { &amp;#34;Files&amp;#34; : { &amp;#34;slot-data-type&amp;#34; : &amp;#34;file&amp;#34;, &amp;#34;slot-type&amp;#34; : &amp;#34;Input&amp;#34;, &amp;#34;inherited-slot&amp;#34; : null, &amp;#34;name&amp;#34; : &amp;#34;Files&amp;#34;, &amp;#34;custom-name&amp;#34; : null, &amp;#34;inheritance-conversions&amp;#34; : { } }, &amp;#34;Filtered files&amp;#34; : { &amp;#34;slot-data-type&amp;#34; : &amp;#34;file&amp;#34;, &amp;#34;slot-type&amp;#34; : &amp;#34;Output&amp;#34;, &amp;#34;inherited-slot&amp;#34; : null, &amp;#34;name&amp;#34; : &amp;#34;Filtered files&amp;#34;, &amp;#34;custom-name&amp;#34; : null, &amp;#34;inheritance-conversions&amp;#34; : { } } }, &amp;#34;jipipe:algorithm-ui-location&amp;#34; : { &amp;#34;{Vertical}&amp;#34; : { &amp;#34;x&amp;#34; : 25, &amp;#34;y&amp;#34; : 250 } }, &amp;#34;jipipe:algorithm-type&amp;#34; : &amp;#34;file-filter&amp;#34;, &amp;#34;jipipe:algorithm-compartment&amp;#34; : &amp;#34;DEFAULT&amp;#34;, &amp;#34;name&amp;#34; : &amp;#34;Filter *.</description>
    </item>
    
    <item>
      <title>Batch processing</title>
      <link>https://www.jipipe.org/documentation/basic-concepts/batch-processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/basic-concepts/batch-processing/</guid>
      <description>JIPipe was designed to always process data in batches, meaning that algorithms always work on multiple data sets at once. This greatly reduces the required work to upscale a processing pipeline from one or few to a large amount of data sets.
We will use this pipeline as example:
graph LR; A[File] --&gt; B[Load image] B --&gt; C[Apply gaussian] In the pipeline, a file is provided as input. Then the file is loaded as image.</description>
    </item>
    
    <item>
      <title>Creating an extension</title>
      <link>https://www.jipipe.org/tutorials/old/extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/old/extension/</guid>
      <description>1. Existing pipelineIn this tutorial, we will create a custom algorithm extension based on parts of the pipeline created in the other tutorial.Please open the project file for the pipeline and navigate to the Preprocessing tab.2. Selecting the algorithmsPlease select the following algorithms (you can either do this by holding the Shift keyboard button and clicking the nodes or dragging a selection around the nodes):Folder listPath to annotationList filesImport imageAfter selecting the algorithms, right-click a selected node and click Export.</description>
    </item>
    
    <item>
      <title>Creating an extension project</title>
      <link>https://www.jipipe.org/documentation-java-api/create-extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/create-extension/</guid>
      <description>1.74.x&amp;#43; This guide was written for JIPipe version 1.74.0 or newer Prerequisities Java 8 (Java 9+ are not working) If you are using Windows or a Linux distribution without Java 8, we recommend AdoptOpenJDK (Please choose OpenJDK 8) Maven Creating the project The project should have following structure:
Project root└── pom.xml└── src└── main├── java└── resources Both the java and resources folder should contain a folder structure that is equivalent the groupId and artifactId of the project.</description>
    </item>
    
    <item>
      <title>Customizing slots</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/slot-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/slot-configuration/</guid>
      <description>In the previous examples, we used the @JIPipeInputSlot and @JIPipeOutputSlot annotations with autoCreate = true to automatically configure the slots.
This is not sufficient for more complicated algorithms that require
Restricting the number of slots Restricting the allowed data types Users to add more slots or remove existing ones A custom JIPipeSlotConfiguration can be used to implement such more advanced behaviors.
For many cases, the default implementation JIPipeMutableSlotConfiguration is sufficient.</description>
    </item>
    
    <item>
      <title>Graph compartments: Outputs</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/compartments2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/compartments2/</guid>
      <description>By double-clicking a compartment in the Compartments tab, it is opened in a pipeline editor tab (red arrow 1).
Compartments communicate to each other via interface nodes: each compartment has a dedicated output node that determines the outputs of the current compartment (red arrow 2).
👉 When creating exercises, use this feature to define the outputs of each specific compartment. This can help students who need guidance on what kind of data should be produced in each image analysis step.</description>
    </item>
    
    <item>
      <title>ImageJ integration</title>
      <link>https://www.jipipe.org/documentation/standard-library/imagej-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/imagej-integration/</guid>
      <description>The ImageJ integration library integrates common data types from ImageJ into JIPipe:
Multi-dimensional images (ImagePlus). The standard output file format are TIFF files. Result tables. They are serialized to CSV files. Region of interest (ROI Manager). JIPipe handles ROI as *.zip files. The ImageJ data types are marked as accessible from outside JIPipe, meaning that algorithms that only use those types can be executed standalone
Image data types Various ImageJ algorithms only work on data with a specific color type, or dimensionality.</description>
    </item>
    
    <item>
      <title>JIPipe for ImageJ users</title>
      <link>https://www.jipipe.org/tutorials/videos/jipipe-for-imagej-users/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/videos/jipipe-for-imagej-users/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mathematical expressions</title>
      <link>https://www.jipipe.org/documentation/create-pipelines/expressions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/create-pipelines/expressions/</guid>
      <description>Table Of Contents Variables Statements Pairs Escaping expressions Operators Functions User functions Data types Numbers Strings Arrays Maps Operators Precedence Compatible types When using nodes that filter or generate data, you might encounter a parameter type called &amp;ldquo;Expression&amp;rdquo;. This parameter allows to to write simple to complex functions that can test for one or multiple conditions or act as input for a generator node. The basic concept of this expression language is to mix string, boolean, and numeric operations into one simple but powerful language.</description>
    </item>
    
    <item>
      <title>Preview from results folder</title>
      <link>https://www.jipipe.org/documentation-java-api/data-type/result-preview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/data-type/result-preview/</guid>
      <description>While JIPipeData allows you to define a custom function for previewing, this only works for data already present in memory. To allow previewing of data stored in a results folder, you need to suppy a JIPipeResultDataSlotPreviewUI that loads the data from disk and generates a preview. We recommend to use JIPipeAsyncResultDataPlotPreviewUI This class will offload the loading and preview generation into a separate thread to prevent the UI from freezing. By default it will use the already defined importFrom(Path) method present in the JIPipeData class and use its already defined preview function.</description>
    </item>
    
    <item>
      <title>Review results</title>
      <link>https://www.jipipe.org/documentation/run-pipelines/result-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/run-pipelines/result-analysis/</guid>
      <description>Running the whole pipeline or executing a quick run with HDD output will result in a folder that contains all output data and the current project file. JIPipe will automatically open an interface that allows you to navigate through the results, and import them back into ImageJ or JIPipe (if supported by the generated data type). You can also re-open these folders via Project &amp;gt; Open analysis output ....
The UI has two main components:</description>
    </item>
    
    <item>
      <title>Row folder</title>
      <link>https://www.jipipe.org/documentation-data-api/row-folder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-data-api/row-folder/</guid>
      <description>All data in a data table are stored in numeric folders called &amp;ldquo;row folders&amp;rdquo;, each containing the data of one table row.
This data stores the raw serialized format, without metadata - metadata is located in data-table.json of the data table.
The exact structure of a row folder depends on the data type. The current documentation can always be found by navigating to Help &amp;gt; Data type compendium within JIPipe. Alternatively, we uploaded a current database on this website.</description>
    </item>
    
    <item>
      <title>Macro node</title>
      <link>https://www.jipipe.org/documentation/standard-library/macro-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/macro-node/</guid>
      <description>The macro node allows to run existing ImageJ macros or execute algorithms that are not directly available as JIPipe nodes. You will find it in Images &amp;gt; ImageJ Macro.
Inputs and outputs By default, the node has no inputs and outputs. Use to the + button to add them. For example, if you want to process one image and output the processed result, create one input and one output.
By default, there are four data types that can be used as input and output:</description>
    </item>
    
    <item>
      <title>User interface</title>
      <link>https://www.jipipe.org/tutorials/videos/guide-user-interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/videos/guide-user-interface/</guid>
      <description> &amp;lt;1.73.x The video tutorial was designed for older versions of JIPipe. Please be aware that some GUI components have changed. </description>
    </item>
    
    <item>
      <title>Data caches</title>
      <link>https://www.jipipe.org/tutorials/videos/guide-data-caches/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/videos/guide-data-caches/</guid>
      <description> &amp;lt;1.73.x The video tutorial was designed for older versions of JIPipe. Please be aware that some GUI components have changed. </description>
    </item>
    
    <item>
      <title>Graph editor user interface</title>
      <link>https://www.jipipe.org/tutorials/videos/guide-graph-editor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/videos/guide-graph-editor/</guid>
      <description> &amp;lt;1.73.x The video tutorial was designed for older versions of JIPipe. Please be aware that some GUI components have changed. </description>
    </item>
    
    <item>
      <title>How to do batch processing</title>
      <link>https://www.jipipe.org/tutorials/videos/guide-batch-processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/videos/guide-batch-processing/</guid>
      <description> &amp;lt;1.73.x The video tutorial was designed for older versions of JIPipe. Please be aware that some GUI components have changed. </description>
    </item>
    
    <item>
      <title>Data types</title>
      <link>https://www.jipipe.org/documentation-data-api/data-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-data-api/data-types/</guid>
      <description>2D FFT Image Trivial conversions A trivial conversion involves no potentially expensive conversion operation. The data will directly match to input slots of the converted type. The edge has a dark-gray color.
This type can be trivially converted into following types:
Data FFT Image Image This type can be trivially converted from following types:
3D FFT Image 4D FFT Image 5D FFT Image Non-trivial conversions A non-trivial conversion is defined by the developer and might involve some more complex conversion operations.</description>
    </item>
    
    <item>
      <title>Dependency</title>
      <link>https://www.jipipe.org/documentation-json-api/dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/dependency/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: dependency.schema.json
Project or extension dependency. Refers to a JIPipe extension.metadata:See metadataid:stringUnique ID of this dependency should have format.:version:stringVersion of this dependencyExample { &amp;#34;metadata&amp;#34; : { &amp;#34;name&amp;#34; : &amp;#34;Filesystem types and algorithms&amp;#34;, &amp;#34;description&amp;#34; : &amp;#34;Data types and algorithms for interacting with files and folders&amp;#34;, &amp;#34;authors&amp;#34; : &amp;#34;Zoltán Cseresnyés, Ruman Gerst&amp;#34;, &amp;#34;website&amp;#34; : &amp;#34;https://jipipe.</description>
    </item>
    
    <item>
      <title>Filesystem algorithms</title>
      <link>https://www.jipipe.org/documentation/standard-library/filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/filesystem/</guid>
      <description>The JIPipe standard library contains data types and algorithms to apply file system operations. The common use case is to extract the list of input files for the following algorithms.
The filesystem library has two basic data types:
A File contains a path to a file A Folder contains a path to a folder A Path contains a path to a file or folder In the Add data menu you can define one file/folder or a list of files/folders.</description>
    </item>
    
    <item>
      <title>Graph compartments</title>
      <link>https://www.jipipe.org/documentation/create-pipelines/compartments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/create-pipelines/compartments/</guid>
      <description>A common issue with graphical programming languages is that large graphs are hard to navigate. JIPipe solves this issue by separating the pipeline graph into sub-graphs. Each sub-graph has a predetermined output node that is visible to other compartments. Other nodes on the other hand are not visible to other compartments.
The difference between compartments and simple node groups is that compartments only communicate with each other via the compartment output node.</description>
    </item>
    
    <item>
      <title>Graph compartments: Reviewing results</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/compartments3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/compartments3/</guid>
      <description>Designing exercises around the generation of compartment outputs simplifies the process of reviewing the results of an exercise.
As JIPipe compartment outputs can be directly run from within the Compartments tab, one can quickly test if the expected results are produced.
For example, if the pipeline within the Preprocessing compartment (red box 1) contains a file loading and Gaussian blurring process, the generated results can be directly generated (red arrow 2) and reviewed (red arrow 3) directly within the Compartments tab.</description>
    </item>
    
    <item>
      <title>JIPipe extensions</title>
      <link>https://www.jipipe.org/installation/extensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/installation/extensions/</guid>
      <description>Table Of Contents Installing new extensions Activating extensions Installing new extensions JIPipe extensions are ImageJ plugins and thus can be installed just as any plugin.
Available options are:
Installation via the Fiji updater Manual installation by copying the files into the plugins or jars directory Older JIPipe versions (1.73.x or older) will automatically load all extensions during the startup. This behavior was changed in JIPipe 1.74.0 where the extensions needs to be manually activated after the installation.</description>
    </item>
    
    <item>
      <title>Multi-parameter algorithms</title>
      <link>https://www.jipipe.org/documentation/standard-library/multi-parameter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/multi-parameter/</guid>
      <description>This page was moved here</description>
    </item>
    
    <item>
      <title>Parameters</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/parameters/</guid>
      <description>You can add parameters to your algorithm by creating a property with a getter and setter. Then you annotate the getter and setter with the same @JIPipeParameter keys. Also add an @JIPipeDocumentation annotation to either the getter or setter.
Parameters are automatically serialized and deserialized.
Please make sure to send an event when the parameter is set, so the UI can update.
// ... see previous tutorials public class MyAlgorithm extends JIPipeIteratingAlgorithm { private float roundness = 0.</description>
    </item>
    
    <item>
      <title>Use results in external software</title>
      <link>https://www.jipipe.org/documentation/run-pipelines/connect-external-software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/run-pipelines/connect-external-software/</guid>
      <description>JIPipe stores outputs in a standardized format that can be easily read with third-party software. The output folder of always contains a file project.jip, which is the project that generated the output.
This folder contains sub-folders named according to the graph compartment. The ID is the unique ID of the graph compartment and can be looked up in the project.jip file or the compartment graph editor.
Each of these compartment folders contains a set of additional sub-folders based on unique ID of the node (also visible in the graph editor).</description>
    </item>
    
    <item>
      <title>Parallelization</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/parallelization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/parallelization/</guid>
      <description>The current version of JIPipe supports parallelization via a fixed thread pool. Parallelization is done on an per-algorithm-level, meaning that the algorithms are responsible for providing parallelization capabilities.
The included base algorithms JIPipeIteratingAlgorithm, JIPipeSimpleIteratingAlgorithm, and JIPipeMergingAlgorithm already come with support for parallelization that has to be manually enabled via code. The inherit from JIPipeParallelizedAlgorithm and completely apply parallelization automatically.
Automated parallelization (JIPipeParallelizedAlgorithm) The automated parallelization is controlled by three factors:</description>
    </item>
    
    <item>
      <title>Custom algorithm info</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/custom-info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/custom-info/</guid>
      <description>In the previous tutorials we used the standard way of creating algorithms. This might not be sufficient if you want to generate algorithms, for example by importing ImageJ algorithms, loading algorithms from JSON or generate algorithms for an unknown list of data types.
How algorithms are registered Algorithm instances are created by an JIPipeNodeInfo. This info is the object that is actually registered into JIPipe. It is able to create new instances of the declared algorithm, or copy it.</description>
    </item>
    
    <item>
      <title>Graph Edge</title>
      <link>https://www.jipipe.org/documentation-json-api/graph-edge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/graph-edge/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: graph-edge.schema.json
Edge in a graphsource-node:stringAlgorithm ID of the edge sourcetarget-node:stringAlgorithm ID of the edge targetsource-slot:stringSlot name within the edge source algorithmtarget-slot:stringSlot name within the edge target algorithmExample { &amp;#34;source-node&amp;#34; : &amp;#34;default-preprocessing-list-files&amp;#34;, &amp;#34;target-node&amp;#34; : &amp;#34;default-preprocessing-filter-files&amp;#34;, &amp;#34;source-slot&amp;#34; : &amp;#34;Files&amp;#34;, &amp;#34;target-slot&amp;#34; : &amp;#34;Files&amp;#34; } </description>
    </item>
    
    <item>
      <title>Project overview</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/projectoverview1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/projectoverview1/</guid>
      <description>Each JIPipe project comes with a customizable Project overview tab that can be accessed via the Help &amp;gt; Project overview menu (red box 1).
It contains the following elements:
A customizable title with authors, website, contact info and more (red box 2) A customizable rich text description with text and images (red box 3) Quick access to bookmarked nodes and selected parameters (both fully customizable; red box 4) 👉 Save the project while the Project overview is open.</description>
    </item>
    
    <item>
      <title>Context actions</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/context-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/context-actions/</guid>
      <description>Context actions allow you to add custom buttons into an algorithm&amp;rsquo;s parameter group that by default will also appear within a node&amp;rsquo;s context menu. They can be used for multiple purposes such as loading example data, applying an auto-configuration, opening websites, or displaying documentation or data in a new tab.
1.74.x&amp;#43; We do no anymore recommend the creation of context actions to implement examples. Instead, register node examples within the extension.</description>
    </item>
    
    <item>
      <title>Data annotation algorithms</title>
      <link>https://www.jipipe.org/documentation/standard-library/annotations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/annotations/</guid>
      <description>Data annotations allow JIPipe algorithms and users to assign an unique data set to the data located in a data slot. The standard library contains various algorithms that allow to generate, manipulate, and utilize those annotations.
We recommend to use the algorithms in Annotation &amp;gt; Generate while setting up filesystem operations or any other import step to prevent issues in following algorithm steps.</description>
    </item>
    
    <item>
      <title>Graph</title>
      <link>https://www.jipipe.org/documentation-json-api/graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/graph/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: graph.schema.json
A graphadditional-metadata:object[object Object]Dict of additional metadataSee additional-metadatanodes:object[object Object]The nodes. Keys are the UUIDs.See graph-nodeedges:object[]The edges. IDs in the edge definition must be consistent to the UUIDs in the &#39;nodes&#39; entrySee graph-edgeExample { &amp;#34;nodes&amp;#34; : { &amp;#34;default-preprocessing-filter-files&amp;#34; : { &amp;#34;jipipe:slot-configuration&amp;#34; : { &amp;#34;Files&amp;#34; : { &amp;#34;slot-data-type&amp;#34; : &amp;#34;file&amp;#34;, &amp;#34;slot-type&amp;#34; : &amp;#34;Input&amp;#34;, &amp;#34;inherited-slot&amp;#34; : null, &amp;#34;name&amp;#34; : &amp;#34;Files&amp;#34;, &amp;#34;custom-name&amp;#34; : null, &amp;#34;inheritance-conversions&amp;#34; : { } }, &amp;#34;Filtered files&amp;#34; : { &amp;#34;slot-data-type&amp;#34; : &amp;#34;file&amp;#34;, &amp;#34;slot-type&amp;#34; : &amp;#34;Output&amp;#34;, &amp;#34;inherited-slot&amp;#34; : null, &amp;#34;name&amp;#34; : &amp;#34;Filtered files&amp;#34;, &amp;#34;custom-name&amp;#34; : null, &amp;#34;inheritance-conversions&amp;#34; : { } } }, &amp;#34;jipipe:algorithm-ui-location&amp;#34; : { &amp;#34;{Vertical}&amp;#34; : { &amp;#34;x&amp;#34; : 25, &amp;#34;y&amp;#34; : 250 } }, &amp;#34;jipipe:algorithm-type&amp;#34; : &amp;#34;file-filter&amp;#34;, &amp;#34;jipipe:algorithm-compartment&amp;#34; : &amp;#34;DEFAULT&amp;#34;, &amp;#34;name&amp;#34; : &amp;#34;Filter *.</description>
    </item>
    
    <item>
      <title>Pipeline output</title>
      <link>https://www.jipipe.org/documentation-data-api/pipeline-output/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-data-api/pipeline-output/</guid>
      <description>A pipeline output folder is generated on running a pipeline using the Run function or via other means of running the pipeline and saving the results to the hard drive.
The generated folder follows a hierarchical structure that is based on the location of data within graph compartments, nodes, and slots. It also contains a copy of the project that generated the data in a file project.jip.
graph LR; Root[&#34;/&#34;] --&gt; DataTable[&#34;</description>
    </item>
    
    <item>
      <title>Project overview: Editing the metadata</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/projectoverview2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/projectoverview2/</guid>
      <description>The custom titles, authors, and descriptions can be edited via the Project settings that can be accessed in two ways:
While the Project overview tab is open, click Edit metadata in the top right panel Navigate to Project &amp;gt; Project settings The General category includes the following settings:
The project name/title The description editor Fields where other metadata like a citation, license, and website can be given The list of authors Acknowledgements </description>
    </item>
    
    <item>
      <title>Running a single node</title>
      <link>https://www.jipipe.org/documentation/run-pipelines/quick-run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/run-pipelines/quick-run/</guid>
      <description>As an additional option to running the whole pipeline, JIPipe also allows you to run the workflow only up to the selected node. The most convenient way to run a single node can be accessed by clicking the green play button that is located inside each node.
Here you will find following options:
Update cache: Runs the pipeline up until the selected node. The result of the selected node will be stored inside a memory cache, which can be reviewed in the Cache browser tab (see below) Cache intermediate results: Runs the pipeline up until the selected node.</description>
    </item>
    
    <item>
      <title>Data caching</title>
      <link>https://www.jipipe.org/documentation/run-pipelines/cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/run-pipelines/cache/</guid>
      <description>JIPipe has a project-wide cache for generated results. This cache can be accessed by algorithms to prevent repeating previous calculation steps.
Load data into the cache To cache data, right click a node and click Update cache. This will execute a Quick run and store all results into the cache.
Accessing the cache Cache items are assigned a unique identifier ( Snapshot) that is based on relevant algorithm parameters and the processing pipeline behind the data generation.</description>
    </item>
    
    <item>
      <title>Extension</title>
      <link>https://www.jipipe.org/documentation-json-api/json-extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/json-extension/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: json-extension.schema.json
An extension that can be put into the ImageJ plugin folderid:stringUnique ID of this extension. Should have format.:version:stringVersion of this extensionmetadata:See metadataGeneral metadata about the extensionalgorithms:object[]List of added algorithmsSee algorithmExample { &amp;#34;id&amp;#34; : &amp;#34;org.</description>
    </item>
    
    <item>
      <title>ImageJ integration</title>
      <link>https://www.jipipe.org/documentation/imagej-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/imagej-integration/</guid>
      <description>ImageJ to JIPipe JIPipe integrates commonly used data types and popular algorithms from ImageJ. If an algorithm is not available for JIPipe, you can still run them via the Macro node. There is also a Python script node available that behaves similar to the macro node.
JIPipe to ImageJ JIPipe algorithms and pipelines can be executed from within an ImageJ environment. There are two ways JIPipe integrates back into ImageJ:</description>
    </item>
    
    <item>
      <title>Managing plugins</title>
      <link>https://www.jipipe.org/documentation/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/plugins/</guid>
      <description>JIPipe has its own plugin (extension) system that is independent of the one provided by ImageJ/SciJava. You can find a list of plugins in Plugins &amp;gt; Manage plugins.
JIPipe by default supports two types of extensions:
Java extensions are similar to ImageJ plugins (*.jar) and are the most powerful plugin type. Just like ImageJ plugins, they are located in the plugins directory. JSON plugins are similar to ImageJ macros or scripts, as they are pure text files.</description>
    </item>
    
    <item>
      <title>Node examples</title>
      <link>https://www.jipipe.org/documentation-java-api/algorithm/node-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/algorithm/node-examples/</guid>
      <description>1.74.x&amp;#43; This guide was written for JIPipe version 1.74.0 or newer To teach users about the settings of more complex nodes or to improve the convenience, you can annotate nodes with node examples. These will appear in a dedicated tab &amp;ldquo;Examples&amp;rdquo; on selecting a node within the pipeline editor.
The standardized example API is based around the &amp;ldquo;Node templates&amp;rdquo; functionality. To create an example, follow these steps:
Select a single node in the expected configuration and create a node template via Right click &amp;gt; Create node template Provide an appropriate name and description.</description>
    </item>
    
    <item>
      <title>Plots and tables</title>
      <link>https://www.jipipe.org/documentation/standard-library/plots-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/plots-tables/</guid>
      <description>The standard library contains algorithms and data types that allows to manipulate tables, and create plots. The table data type is the JIPipe wrapper for the ImageJ results table (see ImageJ integration).
Manipulating tables Table manipulation operations are located in Process &amp;gt; Tables and allow you to add, remove, or replace columns.
Creating plots Plots can be created via the Analyze &amp;gt; Plot &amp;gt; Plot tables algorithm that processes each incoming result table and produces an automatically generated plot.</description>
    </item>
    
    <item>
      <title>Project overview: Bookmarking nodes</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/projectoverview3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/projectoverview3/</guid>
      <description>Bookmarks are not edited within the Project settings tab, but by marking a node directly as bookmarked.
To do this, select your node of interest (red arrow 1) and check the Bookmark this node parameter within the Parameters tab.
👉 Bookmarked nodes are highlighted by a green shadow
👉 Bookmarked nodes automatically appear within the Bookmarks panel of the Project overview, as well as in a second Bookmarks tab that appears if no node is selected</description>
    </item>
    
    <item>
      <title>Comment nodes</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/comments1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/comments1/</guid>
      <description>Comment nodes are a great way to highlight a specific area or node of interest within the pipeline. For example, students can be pointed towards a node where the parameters should be adjusted to generate the expected results.
To add a Comment node, use the Miscellaneous menu and select Comment (red arrow 1). The node will appear within the current pipeline (red arrow 2).
👉 Related tutorial: Importing an image I/II/III Learn how to find and add nodes.</description>
    </item>
    
    <item>
      <title>Jython integration</title>
      <link>https://www.jipipe.org/documentation/standard-library/jython/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/jython/</guid>
      <description>The standard library contains nodes that allow to run Python scripts using the Jython library. Python scripts have access to all JIPipe and ImageJ APIs that are available at runtime.
Due to restrictions in the Jython library, Python libraries that are built on a native backend (such as Numpy) will not work.
As JIPipe builds on the functionality provided by ImageJ. Please refer to the ImageJ documentation to find information on how to expand Jython with additional libraries.</description>
    </item>
    
    <item>
      <title>Metadata</title>
      <link>https://www.jipipe.org/documentation-json-api/metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/metadata/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: metadata.schema.json
Commonly used metadata type in JIPipe.name:stringA namedescription:stringA descriptionauthors:stringComma-separated list of authorswebsite:stringWebsite of the projectlicense:stringName of the licensecitation:stringCitation for the publicationExample { &amp;#34;name&amp;#34; : &amp;#34;Image property annotations&amp;#34;, &amp;#34;description&amp;#34; : &amp;#34;Commonly used annotations for describing image properties&amp;#34;, &amp;#34;authors&amp;#34; : &amp;#34;Zoltán Cseresnyés, Ruman Gerst&amp;#34;, &amp;#34;website&amp;#34; : &amp;#34;https://jipipe.</description>
    </item>
    
    <item>
      <title>Usage in Java</title>
      <link>https://www.jipipe.org/documentation-java-api/usage-in-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-java-api/usage-in-java/</guid>
      <description>The JIPipe API allows you to run algorithms, graphs, and projects in a pure Java environment without the need for a GUI or through ImageJ1 or ImageJ2 scripts.
Prerequisites To use the JIPipe API JIPipe must be initialized first. This requires an ImageJ instance or any other way to load SciJava plugins. The following example shows how to initialize JIPipe manually from a main function.
public static void main(String[] args) { // Just call this function before all others.</description>
    </item>
    
    <item>
      <title>Comment nodes: Customization</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/comments2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/comments2/</guid>
      <description>Comment nodes can be customized in the Parameters tab via a custom background color, custom icon, and custom text color (red box 1).
As with any JIPipe node, you an change the name displayed within the pipeline and provide a rich text description with text and images (red box 2).</description>
    </item>
    
    <item>
      <title>Point</title>
      <link>https://www.jipipe.org/documentation-json-api/point/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/point/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: point.schema.json
A pointx:integerX coordinatey:integerY coordinateExample { &amp;#34;x&amp;#34; : 2900, &amp;#34;y&amp;#34; : 100 } </description>
    </item>
    
    <item>
      <title>R integration</title>
      <link>https://www.jipipe.org/documentation/standard-library/r-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/r-integration/</guid>
      <description>The standard library contains nodes that allow to run R scripts. This means that you will need to install a distribution of R.
You will need to install R (https://www.r-project.org/) and setup JIPipe to find this installation.
Setting up R You have the option to either select an existing R environment, or let JIPipe install a new R environment into a folder (only available on Windows).
To setup Python, navigate to Project &amp;gt; Application settings &amp;gt; Extensions &amp;gt; R integration.</description>
    </item>
    
    <item>
      <title>Cellpose integration</title>
      <link>https://www.jipipe.org/documentation/standard-library/cellpose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/cellpose/</guid>
      <description>JIPipe provides an integration of Cellpose that both can apply segmentation, and training from within JIPipe.
Setting up Cellpose Cellpose is a Python library and is integrated via the Python library. This means that you will need to setup a Python environment with Cellpose installed (follow the documentation here: https://github.com/MouseLand/cellpose) and provide the appropriate settings to JIPipe.
Alternatively, JIPipe provides automated installers (tested on Linux and Windows) that will download and setup Cellpose automatically.</description>
    </item>
    
    <item>
      <title>Comment nodes: Connecting to nodes</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/comments3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/comments3/</guid>
      <description>You can freely connect Comment nodes to the inputs or outputs of other nodes (red box 1).
👉 Comments are automatically excluded from pipeline runs, as they do not contain any workloads. You can freely connect them to anywhere you like without changing the behaviour of the pipeline.
Bookmark comments with tasks or other instructions, so that students can find them easily via the Bookmarks panel.
Bookmarks also render the description, so you can also use comments to ask for answers, e.</description>
    </item>
    
    <item>
      <title>Project</title>
      <link>https://www.jipipe.org/documentation-json-api/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/project/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: project.schema.json
An analysis projectjipipe:project-type:string, x ∈ {project(default)}Used to identify this JSON as JIPipe projectmetadata:See metadata[object Object]General information about the projectdependencies:object[]Dependencies of this projectSee dependencygraph:See graph[object Object]Contains the pipeline nodescompartments:object[object Object]For organization of compartmentscompartment-graph:See graph[object Object]Structural graph of compartmentsExample { &amp;#34;jipipe:project-type&amp;#34; : &amp;#34;project&amp;#34;, &amp;#34;metadata&amp;#34; : { &amp;#34;name&amp;#34; : &amp;#34;Empty (3 compartments)&amp;#34;, &amp;#34;description&amp;#34; : &amp;#34;This template contains three compartments &amp;#39;Preprocessing&amp;#39;, &amp;#39;Analysis&amp;#39;, and &amp;#39;Postprocessing&amp;#39; that are connected to each other.</description>
    </item>
    
    <item>
      <title>Command Line Interface</title>
      <link>https://www.jipipe.org/documentation/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/cli/</guid>
      <description>You can run JIPipe pipelines without a graphical interface via the command line.
Just run following command:
./ImageJ --pass-classpath --full-classpath --main-class org.hkijena.jipipe.JIPipeCLI run --project &amp;lt;project file&amp;gt; --output-folder &amp;lt;output folder&amp;gt; Command line options ./ImageJ --pass-classpath --full-classpath --main-class org.hkijena.jipipe.JIPipeCLI run &amp;lt;options&amp;gt; --project &amp;lt;Project file&amp;gt; provides the project file to be executed --output-folder &amp;lt;folder&amp;gt; defines where outputs will be written. Outputs are in standard JIPipe format. Optional: --num-threads &amp;lt;N=1,2,3,...&amp;gt; lets you enable multi-threading Optional: --overwrite-parameters &amp;lt;JSON file&amp;gt; allows you to overwrite specific parameters without the need for changing the project file Optional: --P&amp;lt;Node ID&amp;gt;/&amp;lt;Parameter ID&amp;gt; &amp;lt;Parameter value JSON&amp;gt; overwrites a specific parameter with the specified value Overwriting parameters The JIPipe project file contains all parameters of a project.</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>https://www.jipipe.org/documentation/standard-library/deep-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/standard-library/deep-learning/</guid>
      <description>JIPipe provides Deep Learning support via a standardized Python interface that allows to train/segment with different networks.
Setting up Deep Learning Deep Learning requires a Python installation that comes with Tensorflow 2. To simplify this process, we included automated installers for this environment that can be accessed via Project &amp;gt; Application settings &amp;gt; Extensions &amp;gt; Deep learning. Here, click Select/install at the Tensorflow item.
The installer will ask you to review various settings - these should be fine for most system configurations.</description>
    </item>
    
    <item>
      <title>Group nodes</title>
      <link>https://www.jipipe.org/documentation/create-pipelines/groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/create-pipelines/groups/</guid>
      <description>While compartments offer a simple way to structure pipelines into functional units, they are not suitable for creating &amp;ldquo;user-defined&amp;rdquo; nodes that can be re-used. Node groups cover this use case by providing a node that contains a dedicated pipeline inside of it. Data is communicated between the main and the inner pipeline via interface nodes that can be customized by users.
The group node can be found in Miscellaneous &amp;gt; Group, or can be created from a set of selected nodes by right-clicking them and selecting the Group option (which will also create inputs and outputs that match the selection).</description>
    </item>
    
    <item>
      <title>Groups and node templates</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/templates1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/templates1/</guid>
      <description>👉 Related tutorial: Creating node groups I Learn how to group a set of nodes into a single compound node. 👉 Related tutorial: Creating node templates Learn how to store nodes for re-use. Node groups and node templates enable full control over the following aspects:
How to reduce the complexity of some operations? Which functions/parameters should be accessible to students to avoid confusion and frustration? Which nodes should students use?</description>
    </item>
    
    <item>
      <title>Slot definition</title>
      <link>https://www.jipipe.org/documentation-json-api/slot-definition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/slot-definition/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: slot-definition.schema.json
Defines a data slotslot-data-type:stringThe data type ID of the data stored in this slotslot-type:string, x ∈ {Input,Output}Determines if the slot is an input or an outputinherited-slot:objectOnly valid for output slot. Defines from which slot to inherit the data type.</description>
    </item>
    
    <item>
      <title>Data table</title>
      <link>https://www.jipipe.org/documentation-json-api/data-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/data-table/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: data-table.schema.json
Defines a data table node-id: string The node type ID that generated the data. Optional. slot: string The slot name that generated the data. Optional. rows: object[] The data row items See data-table-row data-type: string The data type ID behind the row Example { &amp;#34;node-id&amp;#34; : &amp;#34;ij1-fft-forward2d&amp;#34;, &amp;#34;slot&amp;#34; : &amp;#34;Output&amp;#34;, &amp;#34;internal-path&amp;#34; : &amp;#34;/fastdata/projects/JIPipe/Output&amp;#34;, &amp;#34;rows&amp;#34; : [ { &amp;#34;index&amp;#34; : 0, &amp;#34;annotations&amp;#34; : [ ], &amp;#34;true-data-type&amp;#34; : &amp;#34;imagej-imgplus-fft-2d&amp;#34; } ], &amp;#34;data-type&amp;#34; : &amp;#34;imagej-imgplus-fft-2d&amp;#34; } </description>
    </item>
    
    <item>
      <title>Groups and node templates: Compound nodes</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/templates2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/templates2/</guid>
      <description>JIPipe node groups can be used to contain a set of multiple operations (red box 2) into a single node (red box 1). This is for example useful if advanced visualization or file loading processes should be provided to students without establishing all implementation details behind the operation.
👉 Related tutorial: Creating node groups I Learn how to group a set of nodes into a single compound node. 👉 Node groups contents can be easily viewed by double-clicking them.</description>
    </item>
    
    <item>
      <title>Loop nodes</title>
      <link>https://www.jipipe.org/documentation/create-pipelines/loops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation/create-pipelines/loops/</guid>
      <description>JIPipe processes data node-per-node, meaning that a node always processes all available input data before passing the results to the next node. This is easy to understand and makes no assumptions about the structure of the data. The issue is that such a model allocates all memory required to process the data at once.
Group nodes provide a feature that allows to loop the contained pipeline for each input data batch, reducing the memory allocated during the processing (if the groups are set up so that memory-intensive tasks are split).</description>
    </item>
    
    <item>
      <title>Data table row</title>
      <link>https://www.jipipe.org/documentation-json-api/data-table-row/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/data-table-row/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: data-table-row.schema.json
Defines a data table row id: number Row index within the data table annotations: object[] Annotations attached to the data row See annotation true-data-type: string The true (not the slot) data type ID behind the row Example { &amp;#34;index&amp;#34; : 0, &amp;#34;annotations&amp;#34; : [ ], &amp;#34;true-data-type&amp;#34; : &amp;#34;imagej-imgplus-fft-2d&amp;#34; } </description>
    </item>
    
    <item>
      <title>Groups and node templates: Exporting parameters from groups</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/templates3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/templates3/</guid>
      <description>Groups by themselves are a an excellent mode of reducing the complexity of various operations. To still provide users of the group with means to customize the behaviour of the nodes contained within the group, Group nodes support the referencing/export of group-internal parameters (red box 1) to the group itself (red arrow 2).
👉 Related tutorial: Creating node groups II Learn how to export group parameters. 👉 For example, teachers can provide a group responsible for segmenting and filtering objects with settings where students can input custom object size constraints:</description>
    </item>
    
    <item>
      <title>Annotation</title>
      <link>https://www.jipipe.org/documentation-json-api/annotation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/documentation-json-api/annotation/</guid>
      <description>This document describes the properties of the JSON API object. You also can access the document in JSON Schema format: annotation.schema.json
An annotation name: string Name of the annotation value: string Value of the annotation Example { &amp;#34;name&amp;#34; : &amp;#34;#Dataset&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;Experiment 1&amp;#34; } </description>
    </item>
    
    <item>
      <title>Groups and node templates: Providing nodes with the project</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/templates4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/templates4/</guid>
      <description>The node template system allows projects to carry a list of user-defined nodes. These node templates can be created for pre-configured nodes or a group with exported parameters.
👉 Create project-associated node templates for nodes that should be used by the students
👉 Related tutorial: Creating node templates Learn how to create node templates and store them inside the project. Node templates appear both in the Node templates tab (red box 1), as well as in the Templates menu (red box 2).</description>
    </item>
    
    <item>
      <title>Project permissions</title>
      <link>https://www.jipipe.org/tutorials/features/teaching/permissions1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/tutorials/features/teaching/permissions1/</guid>
      <description>Project permissions can be accessed via Project &amp;gt; Project settings &amp;gt; Permissions. In the current iteration of this feature, you can prevent users from creating or deleting nodes, as well as adding/deleting/modifying slots.
👉 These settings are suitable for projects where students are provided with an existing set of unconnected nodes and are tasked to connect them into a pipeline</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.jipipe.org/_footer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jipipe.org/_footer/</guid>
      <description>By Applied Systems Biology, Leibniz Institute for Natural Product Research and Infection Biology – Hans Knöll Institute (HKI), Jena, Germany</description>
    </item>
    
  </channel>
</rss>
